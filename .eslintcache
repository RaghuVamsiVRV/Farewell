[{"/home/naren/Documents/projects/farewell/Farewell/src/index.js":"1","/home/naren/Documents/projects/farewell/Farewell/src/App.jsx":"2","/home/naren/Documents/projects/farewell/Farewell/src/components/main.js":"3","/home/naren/Documents/projects/farewell/Farewell/src/redux/configureStore.js":"4","/home/naren/Documents/projects/farewell/Farewell/src/components/Header.js":"5","/home/naren/Documents/projects/farewell/Farewell/src/components/signup.js":"6","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionCreators.js":"7","/home/naren/Documents/projects/farewell/Farewell/src/redux/comments.js":"8","/home/naren/Documents/projects/farewell/Farewell/src/screens/profilePage.js":"9","/home/naren/Documents/projects/farewell/Farewell/src/components/bubbles.jsx":"10","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionTypes.js":"11","/home/naren/Documents/projects/farewell/Farewell/src/shared/comments.js":"12","/home/naren/Documents/projects/farewell/Farewell/src/redux/users.js":"13","/home/naren/Documents/projects/farewell/Farewell/src/shared/users.js":"14"},{"size":452,"mtime":1611336916013,"results":"15","hashOfConfig":"16"},{"size":528,"mtime":1612283180110,"results":"17","hashOfConfig":"16"},{"size":1455,"mtime":1612283180110,"results":"18","hashOfConfig":"16"},{"size":314,"mtime":1612283180113,"results":"19","hashOfConfig":"16"},{"size":4100,"mtime":1612189155196,"results":"20","hashOfConfig":"16"},{"size":8613,"mtime":1611740251757,"results":"21","hashOfConfig":"16"},{"size":513,"mtime":1612283180110,"results":"22","hashOfConfig":"16"},{"size":487,"mtime":1612283180110,"results":"23","hashOfConfig":"16"},{"size":2438,"mtime":1612333354640,"results":"24","hashOfConfig":"16"},{"size":5375,"mtime":1612354369045,"results":"25","hashOfConfig":"16"},{"size":78,"mtime":1612283180110,"results":"26","hashOfConfig":"16"},{"size":1082,"mtime":1611336916050,"results":"27","hashOfConfig":"16"},{"size":368,"mtime":1612283180113,"results":"28","hashOfConfig":"16"},{"size":930,"mtime":1612283180113,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"k5vmiu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/naren/Documents/projects/farewell/Farewell/src/index.js",[],["64","65"],"/home/naren/Documents/projects/farewell/Farewell/src/App.jsx",["66"],"import song from \"./media/bgm.mp3\";\nimport React, {Component} from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/main';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</div>\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/naren/Documents/projects/farewell/Farewell/src/components/main.js",["67"],"import React, { Component } from 'react';\nimport ProfilePage from '../screens/profilePage';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Bubbles from './bubbles';\nimport Header from './Header';\nimport Signup from './signup';\nimport { addComment } from '../redux/ActionCreators';\nimport { batch, connect } from 'react-redux';\nimport { packSiblings } from 'd3';\n\nconst mapStateToProps = (state) => {\n\treturn {\n    comments: state.comments,\n    users: state.users\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addComment: (id, from, to, comment) => dispatch(addComment(id, from, to, comment)),\n  addUser: (id, _id, name, email, password, batch, college, __v) => dispatch(id, _id, name, email, password, batch, college, __v)\n});\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n  \n\n  render(){\n    const Profile = ({match}) =>{\n      console.log(\"HI\");\n      return(\n      // <ProfilePage />\n      <ProfilePage comments={this.props.comments} addComment={this.props.addComment} id={match.params.Id}/>\n      );\n    };\n    return(\n      <div> \n        <Header/>\n        <Switch>\n        <Route path = \"/bubbles\" component={Bubbles} />\n        <Route path = \"/signup\" component={Signup}/>\n        <Route path='/:Id' component={Profile}/>\n        <Redirect to=\"/bubbles\"/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","/home/naren/Documents/projects/farewell/Farewell/src/redux/configureStore.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/components/Header.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/components/signup.js",["68","69","70","71","72"],"import React, {Component} from \"react\";\nimport {Button, Label, Col, Row} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\nconst minLength = (len) => (val) => (val) && (val.length>=len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\n\nclass Signup extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            input:\"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);  \n        this.handleChange = this.handleChange.bind(this);      \n    }\n\n    handleChange(event){\n        let input=this.state.input;\n        input=event.target.value;\n        this.setState({\n            input\n        });\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'This is a required field, ',\n                                            minLength: 'Must be greater than 2 characters, ',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Webmail\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'This is a required field, ',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\n                                <Col md={9}>\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChange}\n                                    validators={{\n                                        required\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".password\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"re:password\" md={3}>Re-enter password</Label>\n                                <Col md={9}>\n                                    <Control.text type=\"password\" model=\".re:password\" id=\"re:password\" name=\"re:password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    validators={{\n                                        required, passMatch: passMatch(this.state.input)\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".re:password\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        passMatch: 'Passwords should match'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".batch\" id=\"batch\" name=\"batch\"\n                                    className=\"form-control\"\n                                    placeholder=\"Joining Year\"\n                                    validators={{\n                                        required, isNumber\n                                    }}    \n                                    />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".batch\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        isNumber: 'Enter a number'\n                                    }}\n                                    />                \n                                </Col>\n                            </Row>\n                            {/* <Row className=\"form-group\">\n                            <Label htmlFor=\"college\" md={3}>College</Label>\n                            <Col md={9}>\n                                <Control.text model=\".college\" id=\"college\" name=\"college\"\n                                className=\"form-control\"\n                                placeholder=\"College name\"\n                                validators={{\n                                    required\n                                }}\n                                />\n                                <Errors\n                                className=\"text-danger\"\n                                model=\".college\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'This is a required field'    \n                                }}\n                                />\n                            </Col>\n                            </Row> */}\n                            <Row className=\"form-group\">\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\n                                    Submit\n                                </Button>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Signup;\n","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionCreators.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/redux/comments.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/screens/profilePage.js",["73","74"],"import React, { Component } from 'react';\nimport { Control, LocalForm } from 'react-redux-form';\nimport {Button, Row, Col, Card, CardTitle, CardText} from 'reactstrap';\nimport pic from '../media/photos/teja.jpg';\n\n\nfunction RenderComment({comment}){\n  return(\n      <Card key={comment.id}> \n        <CardTitle tag=\"h5\">{comment.from}</CardTitle>\n        <CardText>{comment.comment}</CardText>\n        <CardText className=\"ml-auto mr-3\">\n          -- {new Intl.DateTimeFormat('en-US',{\n              day:'2-digit',\n              month:'short',\n              year:'numeric'\n          }).format(new Date(comment.date))}\n        </CardText>\n      </Card>\n  );\n}\nclass ProfilePage extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      comments:[],\n      user:{},\n      url:{}\n    }\n  }\n\n  componentWillMount() {\n    import('../media/photos/teja.jpg').then(image => {this.setState({url: image})})\n  }\n  componentDidMount() {\n    console.log(this.props.id);\n\t\tfetch(`http://localhost:4000/users/${this.props.id}`)\n\t\t\t.then((response) => response.json())\n      .then((data) => this.setState({user:data}))\n        \n\t}\n\n  render(){\n    const dispComment = this.props.comments.map((comment)=>{\n      return(\n        <Col md={6}>\n          <RenderComment comment={comment}/>\n        </Col>\n      );\n    });\n    function handleSubmit(values){\n      console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.addComment('nani', 'teja', values.comment);\n    }\n    return(\n    <div className=\"container\">\n      <div className=\"container-banner\">\n        <img src={'/photos/anushree.jpg'} alt=\"Avatar\" height=\"170\" width=\"170\"></img>\n        <h2> {this.state.user.name} </h2>\n        <Row>\n          {dispComment}\n        </Row>\n      </div>\n      <div className=\"container-banner\">\n        <LocalForm onSubmit={(values) => handleSubmit(values)}>\n          <Row className=\"form-group\">\n            <Col md={12}>\n              <Control.textarea\n                model=\".comment\"\n                id=\"comment\"\n                name=\"comment\"\n                rows={3}\n                className=\"form-control\"\n              />\n            </Col>\n          </Row>\n          <Button outline type=\"submit\"><span className=\"fa fa-pencil\" /> Submit Comment</Button>\n        </LocalForm>\n      </div>\n    </div>\n    );\n  }\n}\nexport default ProfilePage;\n","/home/naren/Documents/projects/farewell/Farewell/src/components/bubbles.jsx",["75","76","77","78","79","80","81"],"/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionTypes.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/shared/comments.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/redux/users.js",["82"],"import { USERS } from \"../shared/users\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Users = (state = USERS, action) =>{\n    switch(action.type){\n        case ActionTypes.ADD_USER:\n            var user = action.payload;\n            user.id = state.length;\n            console.log(\"new user: \", user);\n        default:\n            return state;\n    }\n};","/home/naren/Documents/projects/farewell/Farewell/src/shared/users.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":21,"column":2,"nodeType":"93","messageId":"94","endLine":23,"endColumn":3},{"ruleId":"95","severity":1,"message":"96","line":46,"column":37,"nodeType":"97","endLine":52,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":68,"column":37,"nodeType":"97","endLine":74,"endColumn":44},{"ruleId":"95","severity":1,"message":"96","line":89,"column":37,"nodeType":"97","endLine":95,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":109,"column":37,"nodeType":"97","endLine":114,"endColumn":41},{"ruleId":"95","severity":1,"message":"96","line":129,"column":37,"nodeType":"97","endLine":135,"endColumn":39},{"ruleId":"87","severity":1,"message":"98","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":11},{"ruleId":"95","severity":1,"message":"99","line":71,"column":15,"nodeType":"97","endLine":77,"endColumn":17},{"ruleId":"87","severity":1,"message":"100","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"101","line":1,"column":38,"nodeType":"89","messageId":"90","endLine":1,"endColumn":47},{"ruleId":"87","severity":1,"message":"102","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":13},{"ruleId":"87","severity":1,"message":"104","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":85,"column":44,"nodeType":"107","messageId":"108","endLine":85,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":113,"column":44,"nodeType":"107","messageId":"108","endLine":113,"endColumn":45},{"ruleId":"109","severity":1,"message":"110","line":10,"column":9,"nodeType":"111","messageId":"112","endLine":11,"endColumn":26},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'pic' is defined but never used.","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]
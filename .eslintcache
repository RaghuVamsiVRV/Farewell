[{"E:\\my work\\Farewell\\src\\index.js":"1","E:\\my work\\Farewell\\src\\App.jsx":"2","E:\\my work\\Farewell\\src\\components\\main.js":"3","E:\\my work\\Farewell\\src\\redux\\configureStore.js":"4","E:\\my work\\Farewell\\src\\components\\Header.js":"5","E:\\my work\\Farewell\\src\\redux\\ActionCreators.js":"6","E:\\my work\\Farewell\\src\\components\\signup.js":"7","E:\\my work\\Farewell\\src\\redux\\comments.js":"8","E:\\my work\\Farewell\\src\\redux\\users.js":"9","E:\\my work\\Farewell\\src\\screens\\profilePage.js":"10","E:\\my work\\Farewell\\src\\components\\bubbles.jsx":"11","E:\\my work\\Farewell\\src\\redux\\ActionTypes.js":"12","E:\\my work\\Farewell\\src\\shared\\comments.js":"13","E:\\my work\\Farewell\\src\\shared\\users.js":"14"},{"size":467,"mtime":1611408984071,"results":"15","hashOfConfig":"16"},{"size":700,"mtime":1612523557720,"results":"17","hashOfConfig":"16"},{"size":1507,"mtime":1612284024931,"results":"18","hashOfConfig":"16"},{"size":326,"mtime":1612284025191,"results":"19","hashOfConfig":"16"},{"size":4737,"mtime":1612523848854,"results":"20","hashOfConfig":"16"},{"size":535,"mtime":1612284024942,"results":"21","hashOfConfig":"16"},{"size":11773,"mtime":1612523557747,"results":"22","hashOfConfig":"16"},{"size":501,"mtime":1612284025187,"results":"23","hashOfConfig":"16"},{"size":380,"mtime":1612284025194,"results":"24","hashOfConfig":"16"},{"size":2953,"mtime":1612526213190,"results":"25","hashOfConfig":"16"},{"size":6106,"mtime":1612523557736,"results":"26","hashOfConfig":"16"},{"size":80,"mtime":1612284025100,"results":"27","hashOfConfig":"16"},{"size":1126,"mtime":1611408984080,"results":"28","hashOfConfig":"16"},{"size":962,"mtime":1612284025444,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1nxtvle",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\my work\\Farewell\\src\\index.js",[],["64","65"],"E:\\my work\\Farewell\\src\\App.jsx",["66"],"import song from './media/bgm.mp3';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/main';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nimport REACTGA from 'react-ga';\r\n\r\nREACTGA.initialize(process.env.REACT_APP_GA);\r\nREACTGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","E:\\my work\\Farewell\\src\\components\\main.js",["67","68","69"],"import React, { Component } from 'react';\r\nimport ProfilePage from '../screens/profilePage';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Bubbles from './bubbles';\r\nimport Header from './Header';\r\nimport Signup from './signup';\r\nimport { addComment } from '../redux/ActionCreators';\r\nimport { batch, connect } from 'react-redux';\r\nimport { packSiblings } from 'd3';\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n    comments: state.comments,\r\n    users: state.users\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment: (id, from, to, comment) => dispatch(addComment(id, from, to, comment)),\r\n  addUser: (id, _id, name, email, password, batch, college, __v) => dispatch(id, _id, name, email, password, batch, college, __v)\r\n});\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n  \r\n\r\n  render(){\r\n    const Profile = ({match}) =>{\r\n      console.log(\"HI\");\r\n      return(\r\n      // <ProfilePage />\r\n      <ProfilePage comments={this.props.comments} addComment={this.props.addComment} id={match.params.Id}/>\r\n      );\r\n    };\r\n    return(\r\n      <div> \r\n        <Header/>\r\n        <Switch>\r\n        <Route path = \"/bubbles\" component={Bubbles} />\r\n        <Route path = \"/signup\" component={Signup}/>\r\n        <Route path='/:Id' component={Profile}/>\r\n        <Redirect to=\"/bubbles\"/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","E:\\my work\\Farewell\\src\\redux\\configureStore.js",[],"E:\\my work\\Farewell\\src\\components\\Header.js",[],"E:\\my work\\Farewell\\src\\redux\\ActionCreators.js",[],"E:\\my work\\Farewell\\src\\components\\signup.js",["70","71","72","73","74","75","76","77","78","79"],"import React, {Component} from \"react\";\r\nimport {Button, Label, Col, Row} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { min } from \"d3\";\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst eqLength = (len) => (val) => (val) && (val.length==len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\r\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\r\n\r\nclass Signup extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            input:\"\",\r\n            user:{}\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.handleChange = this.handleChange.bind(this);      \r\n    }\r\n\r\n    handleChange(event){\r\n        let input=this.state.input;\r\n        input=event.target.value;\r\n        this.setState({\r\n            input:input\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({name:values.name, email:values.email, password:values.password, branch:values.branch, batch:values.batch, college:\"IIT PATNA\", imageURL:values.imageURL})\r\n        };\r\n        fetch('http://localhost:4000/signup', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({user: data}));\r\n            alert(this.state.user.message)    \r\n\r\n      \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            minLength: 'Must be greater than 2 characters, ',\r\n                                            maxLength: 'Must be 30 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Webmail\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            validEmail: 'Enter college webmail'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    validators={{\r\n                                        required, minLength: minLength(8)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        minLength: 'Enter min 8 characters'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"re_password\" md={3}>Re-enter password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".re_password\" id=\"re_password\" name=\"re_password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    validators={{\r\n                                        required, passMatch: passMatch(this.state.input)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".re_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        passMatch: 'Passwords should match'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"branch\" md={3}>Branch</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".branch\" id=\"branch\" name=\"branch\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Branch Code\"\r\n                                    validators={{\r\n                                        required, eqLength: eqLength(2)\r\n                                    }}    \r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".branch\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        eqLength: \"Enter branch code, e.g 'CS, EE'\"                                        \r\n                                    }}\r\n                                    />                \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".batch\" id=\"batch\" name=\"batch\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Joining Year\"\r\n                                    validators={{\r\n                                        required, isNumber, eqLength: eqLength(4)\r\n                                    }}    \r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".batch\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        isNumber: 'Enter a number',\r\n                                        eqLength: \"Enter year, e.g '2021'\"                                        \r\n                                    }}\r\n                                    />                \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"imageURL\" md={3}>imageURL</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".imageURL\" id=\"imageURL\" name=\"imageURL\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"URL\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}    \r\n                                    />\r\n                                    <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".batch\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, '                                       \r\n                                    }}\r\n                                    />                \r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <Row className=\"form-group\">\r\n    <Label htmlFor=\"college\" md={3}>College</Label>\r\n    <Col md={9}>\r\n        <Control.text model=\".college\" id=\"college\" name=\"college\"\r\n        className=\"form-control\"\r\n        placeholder=\"College name\"\r\n        validators={{\r\n            required\r\n        }}\r\n        />\r\n        <Errors\r\n        className=\"text-danger\"\r\n        model=\".college\"\r\n        show=\"touched\"\r\n        messages={{\r\n            required: 'This is a required field'    \r\n        }}\r\n        />\r\n    </Col>\r\n</Row> */}\r\nexport default Signup;\r\n","E:\\my work\\Farewell\\src\\redux\\comments.js",[],"E:\\my work\\Farewell\\src\\redux\\users.js",["80"],"import { USERS } from \"../shared/users\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Users = (state = USERS, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_USER:\r\n            var user = action.payload;\r\n            user.id = state.length;\r\n            console.log(\"new user: \", user);\r\n        default:\r\n            return state;\r\n    }\r\n};","E:\\my work\\Farewell\\src\\screens\\profilePage.js",["81"],"E:\\my work\\Farewell\\src\\components\\bubbles.jsx",["82","83","84","85","86","87","88","89"],"import isMobile from 'ismobilejs';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport photo from '../media/photos/teja.jpg';\r\n\r\n\r\n\r\nclass BarChart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.myRef = React.createRef();\r\n\t}\r\n\t// definer() {\r\n\t// \tconst svg = d3.select(this.myRef.current);\r\n\t// \tvar defs = svg.append('defs');\r\n\t// \tdefs\r\n\t// \t\t// .selectAll('pattern')\r\n\t// \t\t// .data(bigga)\r\n\t// \t\t// .enter()\r\n\t// \t\t.append('pattern')\r\n\t// \t\t.attr('id', 'picture')\r\n\t// \t\t.attr('height', '100%')\r\n\t// \t\t.attr('width', '100%')\r\n\t// \t\t.attr('patterContentUnits', 'objectBoundingBox')\r\n\t// \t\t.append('image')\r\n\t// \t\t.attr('height', 1)\r\n\t// \t\t.attr('width', 1)\r\n\t// \t\t.attr('preserveAspectRatio', 'none')\r\n\t// \t\t.attr('xmlns', 'http://www.w3.org/2000/svg')\r\n\t// \t\t.attr('xmlns:href', require('../media/photos/anushree.jpg'));\r\n\t// }\r\n\tdrawChart(bigga) {\r\n\t\tconsole.log(process.env.REACT_APP_GA);\r\n\r\n\t\tconst height = window.innerHeight;\r\n\t\tconst width = window.innerWidth;\r\n\t\tvar forcedictX = { CE: width / 2, CS: width / 2, ME: width / 4, CB: width / 1.33, EE: width / 4.5 };\r\n\t\tvar forcedictY = { CE: height / 4, CS: height / 1.33, ME: height / 2, CB: height / 2, EE: height / 2.5 };\r\n\t\tvar colordict = { CE: '#c5aa84', CS: '#3adcc6', ME: '#914529', CB: '#f26d7d', EE: '#d0343a' };\r\n\r\n\t\tconsole.log(forcedictX);\r\n\r\n\t\tconst svg = d3.select(this.myRef.current);\r\n\t\tvar simulation = d3.forceSimulation().nodes(bigga);\r\n\t\tsimulation\r\n\t\t\t.force('charge_force', d3.forceManyBody().strength(600))\r\n\t\t\t.force('X', d3.forceX(width / 2))\r\n\t\t\t.force('Y', d3.forceY(height / 2))\r\n\t\t\t.force(\r\n\t\t\t\t'collide',\r\n\t\t\t\td3.forceCollide(function(d) {\r\n\t\t\t\t\treturn d.size + 7;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\tvar zoom_handler = d3.zoom().on('zoom', zoom_actions);\r\n\t\tzoom_handler(svg);\r\n\t\tfunction zoom_actions(event) {\r\n\t\t\tnode.attr('transform', event.transform);\r\n\t\t\ttexts.attr('transform', event.transform);\r\n\t\t}\r\n\r\n\t\tvar node = svg\r\n\t\t\t.append('g')\r\n\t\t\t.attr('class', 'nodes')\r\n\t\t\t.selectAll('circle')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('circle')\r\n\t\t\t.attr('r', (d) => d.size)\r\n\t\t\t.attr('fill', (d) => colordict[d.branch])\r\n\t\t\t.attr('stroke', 'white')\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size + 5);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\t\tnode.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\t// var i;\r\n\t\t// for (i = 0; i < bigga.length; i++) {\r\n\t\t// \tif (bigga[i].brach == 'CE') {\r\n\t\t// \t\tnode.data(bigga[i]);\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tvar texts = svg\r\n\t\t\t.append('g')\r\n\t\t\t.selectAll('text')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('text')\r\n\t\t\t.text((d) => d.name)\r\n\t\t\t.style('fill', 'white')\r\n\t\t\t.attr('opacity', function() {\r\n\t\t\t\tif (isMobile(window.navigator).phone || isMobile(window.navigator).tablet) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('10').attr('opacity', '1');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('2000').attr('opacity', '0');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\r\n\t\ttexts.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\tnode.append('title').text((d) => d.name).attr('opacity', '1');\r\n\t\tsimulation.on('tick', tickActions);\r\n\t\tfunction tickActions() {\r\n\t\t\ttexts.attr('x', (d) => d.x - d.name.length * 4);\r\n\t\t\ttexts.attr('y', (d) => d.y + 3);\r\n\t\t\tnode\r\n\t\t\t\t.attr('cx', function(d) {\r\n\t\t\t\t\treturn d.x;\r\n\t\t\t\t})\r\n\t\t\t\t.attr('cy', function(d) {\r\n\t\t\t\t\treturn d.y;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar drag_handler = d3.drag().on('start', drag_start).on('drag', drag_drag).on('end', drag_end);\r\n\t\tfunction drag_start(event) {\r\n\t\t\tif (!event.active) simulation.alphaTarget(0.3).restart();\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\t\tfunction drag_drag(event) {\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\r\n\t\tfunction drag_end(event) {\r\n\t\t\tif (d3.active) simulation.alphaTarget(0);\r\n\t\t\tevent.subject.fx = null;\r\n\t\t\tevent.subject.fy = null;\r\n\t\t}\r\n\t\tdrag_handler(node);\r\n\t\tdrag_handler(texts);\r\n\r\n\t\td3.select('#branchwise').on('click', function() {\r\n\t\t\tsimulation\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'X',\r\n\t\t\t\t\td3.forceX(function(d) {\r\n\t\t\t\t\t\treturn forcedictX[d.branch];\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'Y',\r\n\t\t\t\t\td3.forceY(function(d) {\r\n\t\t\t\t\t\treturn forcedictY[d.branch];\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.alphaTarget(0.1)\r\n\t\t\t\t.restart();\r\n\t\t});\r\n\t\td3.select('#normal').on('click', function(d) {\r\n\t\t\tsimulation.force('X', d3.forceX(width / 2)).force('Y', d3.forceY(height / 2)).alphaTarget(0.1).restart();\r\n\t\t});\r\n\r\n\t\t// const svg = d3.select('body').append('svg').attr('width', 700).attr('height', 300);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// this.definer();\r\n\r\n\t\tfetch('http://localhost:4000/users?batch=2017&college=IIT PATNA')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((seniors) => this.drawChart(seniors.users));\r\n\r\n\t\t// const data = axios.get('http://localhost:4000/users?batch=2017&college=IIT PATNA');\r\n\t\t// console.log(data);\r\n\t\t// this.drawChart();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div class={'patterner'}>\r\n\t\t\t\t<div style={{ background: 'black', 'text-align': 'center' }}>\r\n\t\t\t\t\t<Button id={'branchwise'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tBranchwise\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button id={'normal'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tNormal\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<svg\r\n\t\t\t\t\tref={this.myRef}\r\n\t\t\t\t\tstyle={{ width: window.innerWidth, height: window.innerHeight, background: 'black' }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarChart;\r\n","E:\\my work\\Farewell\\src\\redux\\ActionTypes.js",[],"E:\\my work\\Farewell\\src\\shared\\comments.js",[],"E:\\my work\\Farewell\\src\\shared\\users.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":9,"column":10,"nodeType":"96","messageId":"97","endLine":9,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":24,"column":2,"nodeType":"102","messageId":"103","endLine":26,"endColumn":3},{"ruleId":"94","severity":1,"message":"104","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":10,"column":56,"nodeType":"107","messageId":"108","endLine":10,"endColumn":58},{"ruleId":"109","severity":1,"message":"110","line":61,"column":37,"nodeType":"111","endLine":67,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":83,"column":37,"nodeType":"111","endLine":89,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":104,"column":37,"nodeType":"111","endLine":110,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":125,"column":37,"nodeType":"111","endLine":130,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":145,"column":37,"nodeType":"111","endLine":151,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":166,"column":37,"nodeType":"111","endLine":172,"endColumn":39},{"ruleId":"109","severity":1,"message":"110","line":188,"column":37,"nodeType":"111","endLine":194,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":217,"column":1,"nodeType":"114","messageId":"115","endLine":236,"endColumn":11},{"ruleId":"116","severity":1,"message":"117","line":10,"column":9,"nodeType":"118","messageId":"119","endLine":11,"endColumn":26},{"ruleId":"109","severity":1,"message":"120","line":83,"column":9,"nodeType":"111","endLine":89,"endColumn":11},{"ruleId":"94","severity":1,"message":"121","line":2,"column":18,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"122","line":3,"column":28,"nodeType":"96","messageId":"97","endLine":3,"endColumn":36},{"ruleId":"94","severity":1,"message":"123","line":3,"column":38,"nodeType":"96","messageId":"97","endLine":3,"endColumn":47},{"ruleId":"94","severity":1,"message":"124","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":14},{"ruleId":"94","severity":1,"message":"125","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":13},{"ruleId":"94","severity":1,"message":"126","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":87,"column":44,"nodeType":"107","messageId":"129","endLine":87,"endColumn":45},{"ruleId":"127","severity":1,"message":"128","line":121,"column":44,"nodeType":"107","messageId":"129","endLine":121,"endColumn":45},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","'batch' is defined but never used.","'packSiblings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'min' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]
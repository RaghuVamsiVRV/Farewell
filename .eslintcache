[{"D:\\Farewell\\Farewell\\src\\index.js":"1","D:\\Farewell\\Farewell\\src\\App.jsx":"2","D:\\Farewell\\Farewell\\src\\components\\main.js":"3","D:\\Farewell\\Farewell\\src\\components\\signup.js":"4","D:\\Farewell\\Farewell\\src\\components\\Header.js":"5","D:\\Farewell\\Farewell\\src\\screens\\profilePage.js":"6","D:\\Farewell\\Farewell\\src\\components\\Footer.jsx":"7","D:\\Farewell\\Farewell\\src\\components\\bubbles.jsx":"8","D:\\Farewell\\Farewell\\src\\screens\\about.jsx":"9","D:\\Farewell\\Farewell\\src\\shared\\users.js":"10","D:\\Farewell\\Farewell\\src\\shared\\comments.js":"11"},{"size":467,"mtime":1612777811515,"results":"12","hashOfConfig":"13"},{"size":562,"mtime":1613047670776,"results":"14","hashOfConfig":"13"},{"size":945,"mtime":1612971001884,"results":"15","hashOfConfig":"13"},{"size":11912,"mtime":1613056278028,"results":"16","hashOfConfig":"13"},{"size":6535,"mtime":1613048237651,"results":"17","hashOfConfig":"13"},{"size":3060,"mtime":1613047548466,"results":"18","hashOfConfig":"13"},{"size":304,"mtime":1612777811515,"results":"19","hashOfConfig":"13"},{"size":6199,"mtime":1613047549942,"results":"20","hashOfConfig":"13"},{"size":1232,"mtime":1613056278003,"results":"21","hashOfConfig":"13"},{"size":962,"mtime":1612777811587,"results":"22","hashOfConfig":"13"},{"size":1126,"mtime":1612777811587,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8od2o2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"D:\\Farewell\\Farewell\\src\\index.js",[],["52","53"],"D:\\Farewell\\Farewell\\src\\App.jsx",["54","55"],"D:\\Farewell\\Farewell\\src\\components\\main.js",["56","57"],"import About from '../screens/about';\r\nimport React, { Component } from 'react';\r\nimport ProfilePage from '../screens/profilePage';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Bubbles from './bubbles';\r\nimport Header from './Header';\r\nimport Signup from './signup';\r\n\r\nimport { packSiblings } from 'd3';\r\nimport Footer from './Footer';\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst Profile = ({ match }) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ProfilePage id={match.params.Id} />\r\n\t\t\t);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/bubbles\" component={Bubbles} />\r\n\t\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t\t\t<Route path=\"/:Id\" component={Profile} />\r\n\t\t\t\t\t<Redirect to=\"/bubbles\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Main);\r\n","D:\\Farewell\\Farewell\\src\\components\\signup.js",["58","59","60","61","62","63","64","65","66","67","68","69","70"],"import React, {Component} from \"react\";\r\nimport {Button, Label, Col, Row} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { min } from \"d3\";\r\n\r\nvar store=require('store')\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst eqLength = (len) => (val) => (val) && (val.length==len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\r\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\r\n\r\nclass Signup extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            input:\"\",\r\n            user:{}\r\n        };\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.handleChange = this.handleChange.bind(this);      \r\n    }\r\n\r\n    handleChange(event){\r\n        let input=this.state.input;\r\n        input=event.target.value;\r\n        this.setState({\r\n            input:input\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({name:values.name, email:values.email, password:values.password, branch:values.branch, batch:values.batch, college:\"IIT PATNA\", size:Math.floor(Math.random() * (50 - 30 + 1) + 30)})\r\n        };\r\n        fetch('http://localhost:4000/signup', requestOptions)\r\n            .then(response => {if(!response.ok){throw response} response.json()})\r\n            .then(data => {this.setState({user: data});alert(\"Login to view your account\")})\r\n            .catch(err =>{\r\n                err.text().then(errMsg=>\r\n                    {\r\n                        var error=JSON.parse(errMsg);\r\n                        alert(error.error)\r\n                    })\r\n            })\r\n\r\n    }\r\n\r\n    onDrop(picture) {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(picture),\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            minLength: 'Must be greater than 2 characters, ',\r\n                                            maxLength: 'Must be 30 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Webmail\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            validEmail: 'Enter college webmail'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    validators={{\r\n                                        required, minLength: minLength(8)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        minLength: 'Enter min 8 characters'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"re_password\" md={3}>Re-enter password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".re_password\" id=\"re_password\" name=\"re_password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    validators={{\r\n                                        required, passMatch: passMatch(this.state.input)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".re_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        passMatch: 'Passwords should match'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"branch\" md={3}>Branch</Label>\r\n                                <Col md={9}>\r\n                                    <Control.select model=\".branchSelect\" name =\"branchSelect\" id=\"branchSelect\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}>\r\n                                        <option/>\r\n                                        <option value=\"CS\">CS</option>\r\n                                        <option value=\"EE\">EE</option>\r\n                                        <option value=\"ME\">ME</option>\r\n                                        <option value=\"CE\">CE</option>\r\n                                        <option value=\"CB\">CB</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".branchSelect\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\r\n                                <Col md={9}>\r\n                                <Control.select model=\".batchSelect\" name =\"batchSelect\" id=\"batchSelect\" className=\"form-control\"\r\n                                validators={{required}}>\r\n                                    <option/>\r\n                                    <option value='2016'>2016</option>\r\n                                    <option value='2017'>2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                </Control.select> \r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".batchSelect\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field'\r\n                                    }}\r\n                                />      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"image\" md={3}>Profile Photo</Label>\r\n                                <Col md={9}>\r\n                                    <ImageUploader\r\n                                        withIcon={false}\r\n                                        buttonText='Choose image'\r\n                                        onChange={this.onDrop}\r\n                                        label=\"Max file size: 0.5mb, accepted: jpg\"\r\n                                        imgExtension={['.jpg']}\r\n                                        maxFileSize={524280}\r\n                                    />               \r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <Row className=\"form-group\">\r\n    <Label htmlFor=\"college\" md={3}>College</Label>\r\n    <Col md={9}>\r\n        <Control.text model=\".college\" id=\"college\" name=\"college\"\r\n        className=\"form-control\"\r\n        placeholder=\"College name\"\r\n        validators={{\r\n            required\r\n        }}\r\n        />\r\n        <Errors\r\n        className=\"text-danger\"\r\n        model=\".college\"\r\n        show=\"touched\"\r\n        messages={{\r\n            required: 'This is a required field'    \r\n        }}\r\n        />\r\n    </Col>\r\n</Row> */}\r\nexport default Signup;\r\n","D:\\Farewell\\Farewell\\src\\components\\Header.js",["71","72"],"D:\\Farewell\\Farewell\\src\\screens\\profilePage.js",["73"],"D:\\Farewell\\Farewell\\src\\components\\Footer.jsx",["74","75"],"import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<Link className=\"small\" to=\"/about\">\r\n\t\t\t\tmade with love <img height=\"15px\" width=\"15px\" src=\"/photos/info_icon.png\" />\r\n\t\t\t</Link>\r\n\t\t</footer>\r\n\t);\r\n}\r\n","D:\\Farewell\\Farewell\\src\\components\\bubbles.jsx",["76","77","78","79","80","81","82","83"],"D:\\Farewell\\Farewell\\src\\screens\\about.jsx",["84"],"D:\\Farewell\\Farewell\\src\\shared\\users.js",[],["85","86"],"D:\\Farewell\\Farewell\\src\\shared\\comments.js",[],["87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":18},{"ruleId":"93","severity":1,"message":"98","line":9,"column":10,"nodeType":"95","messageId":"96","endLine":9,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":13,"column":2,"nodeType":"101","messageId":"102","endLine":15,"endColumn":3},{"ruleId":"93","severity":1,"message":"103","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":13},{"ruleId":"93","severity":1,"message":"104","line":6,"column":5,"nodeType":"95","messageId":"96","endLine":6,"endColumn":10},{"ruleId":"93","severity":1,"message":"105","line":11,"column":7,"nodeType":"95","messageId":"96","endLine":11,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":11,"column":56,"nodeType":"108","messageId":"109","endLine":11,"endColumn":58},{"ruleId":"93","severity":1,"message":"110","line":12,"column":7,"nodeType":"95","messageId":"96","endLine":12,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":64,"column":37,"nodeType":"113","endLine":70,"endColumn":44},{"ruleId":"111","severity":1,"message":"112","line":86,"column":37,"nodeType":"113","endLine":92,"endColumn":44},{"ruleId":"111","severity":1,"message":"112","line":107,"column":37,"nodeType":"113","endLine":113,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":128,"column":37,"nodeType":"113","endLine":133,"endColumn":41},{"ruleId":"111","severity":1,"message":"114","line":148,"column":37,"nodeType":"113","endLine":151,"endColumn":40},{"ruleId":"111","severity":1,"message":"114","line":172,"column":33,"nodeType":"113","endLine":173,"endColumn":57},{"ruleId":"111","severity":1,"message":"112","line":192,"column":37,"nodeType":"113","endLine":198,"endColumn":39},{"ruleId":"115","severity":1,"message":"116","line":221,"column":1,"nodeType":"117","messageId":"118","endLine":240,"endColumn":11},{"ruleId":"93","severity":1,"message":"119","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":49,"column":49,"nodeType":"122","messageId":"123","endLine":49,"endColumn":94},{"ruleId":"111","severity":1,"message":"124","line":88,"column":9,"nodeType":"113","endLine":94,"endColumn":11},{"ruleId":"125","severity":1,"message":"126","line":4,"column":1,"nodeType":"127","endLine":12,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":8,"column":20,"nodeType":"113","endLine":8,"endColumn":82},{"ruleId":"93","severity":1,"message":"130","line":2,"column":18,"nodeType":"95","messageId":"96","endLine":2,"endColumn":29},{"ruleId":"93","severity":1,"message":"131","line":3,"column":28,"nodeType":"95","messageId":"96","endLine":3,"endColumn":36},{"ruleId":"93","severity":1,"message":"132","line":3,"column":38,"nodeType":"95","messageId":"96","endLine":3,"endColumn":47},{"ruleId":"93","severity":1,"message":"133","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"134","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":13},{"ruleId":"93","severity":1,"message":"135","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":85,"column":44,"nodeType":"108","messageId":"138","endLine":85,"endColumn":45},{"ruleId":"136","severity":1,"message":"137","line":119,"column":44,"nodeType":"108","messageId":"138","endLine":119,"endColumn":45},{"ruleId":"93","severity":1,"message":"133","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"89","replacedBy":"139"},{"ruleId":"91","replacedBy":"140"},{"ruleId":"89","replacedBy":"141"},{"ruleId":"91","replacedBy":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'packSiblings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'min' is defined but never used.","'store' is assigned a value but never used.","'eqLength' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isNumber' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Errors' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["143"],["144"],["143"],["144"],"no-global-assign","no-unsafe-negation"]
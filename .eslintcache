[{"/home/naren/Documents/projects/farewell/Farewell/src/index.js":"1","/home/naren/Documents/projects/farewell/Farewell/src/App.jsx":"2","/home/naren/Documents/projects/farewell/Farewell/src/redux/configureStore.js":"3","/home/naren/Documents/projects/farewell/Farewell/src/components/main.js":"4","/home/naren/Documents/projects/farewell/Farewell/src/redux/comments.js":"5","/home/naren/Documents/projects/farewell/Farewell/src/redux/users.js":"6","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionCreators.js":"7","/home/naren/Documents/projects/farewell/Farewell/src/components/Header.js":"8","/home/naren/Documents/projects/farewell/Farewell/src/screens/profilePage.js":"9","/home/naren/Documents/projects/farewell/Farewell/src/components/signup.js":"10","/home/naren/Documents/projects/farewell/Farewell/src/components/bubbles.jsx":"11","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionTypes.js":"12","/home/naren/Documents/projects/farewell/Farewell/src/shared/comments.js":"13","/home/naren/Documents/projects/farewell/Farewell/src/shared/users.js":"14","/home/naren/Documents/projects/farewell/Farewell/src/components/Footer.jsx":"15","/home/naren/Documents/projects/farewell/Farewell/src/screens/about.jsx":"16"},{"size":452,"mtime":1611336916013,"results":"17","hashOfConfig":"18"},{"size":671,"mtime":1612374472620,"results":"19","hashOfConfig":"18"},{"size":314,"mtime":1612283180113,"results":"20","hashOfConfig":"18"},{"size":1531,"mtime":1612534872266,"results":"21","hashOfConfig":"18"},{"size":487,"mtime":1612283180110,"results":"22","hashOfConfig":"18"},{"size":368,"mtime":1612283180113,"results":"23","hashOfConfig":"18"},{"size":513,"mtime":1612283180110,"results":"24","hashOfConfig":"18"},{"size":4728,"mtime":1612529985240,"results":"25","hashOfConfig":"18"},{"size":2922,"mtime":1612528919337,"results":"26","hashOfConfig":"18"},{"size":11545,"mtime":1612528919337,"results":"27","hashOfConfig":"18"},{"size":5981,"mtime":1612534058443,"results":"28","hashOfConfig":"18"},{"size":78,"mtime":1612283180110,"results":"29","hashOfConfig":"18"},{"size":1082,"mtime":1611336916050,"results":"30","hashOfConfig":"18"},{"size":930,"mtime":1612283180113,"results":"31","hashOfConfig":"18"},{"size":292,"mtime":1612533741393,"results":"32","hashOfConfig":"18"},{"size":307,"mtime":1612534674096,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"k5vmiu",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/naren/Documents/projects/farewell/Farewell/src/index.js",[],["71","72"],"/home/naren/Documents/projects/farewell/Farewell/src/App.jsx",["73"],"import song from './media/bgm.mp3';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/main';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport REACTGA from 'react-ga';\n\nREACTGA.initialize(process.env.REACT_APP_GA);\nREACTGA.pageview(window.location.pathname + window.location.search);\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Main />\n\t\t\t\t\t</div>\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","/home/naren/Documents/projects/farewell/Farewell/src/redux/configureStore.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/components/main.js",["74","75","76"],"/home/naren/Documents/projects/farewell/Farewell/src/redux/comments.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/redux/users.js",["77"],"import { USERS } from \"../shared/users\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport const Users = (state = USERS, action) =>{\n    switch(action.type){\n        case ActionTypes.ADD_USER:\n            var user = action.payload;\n            user.id = state.length;\n            console.log(\"new user: \", user);\n        default:\n            return state;\n    }\n};","/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionCreators.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/components/Header.js",["78"],"/home/naren/Documents/projects/farewell/Farewell/src/screens/profilePage.js",["79"],"import React, { Component } from 'react';\nimport { Control, LocalForm } from 'react-redux-form';\nimport {Button, Row, Col, Card, CardTitle, CardText, CardBody} from 'reactstrap';\n\n\n\nfunction RenderComment({comment}){\n  return(\n      <Card key={comment._id}> \n        <CardTitle tag=\"h5\">{comment.senderName}</CardTitle>\n        <CardBody>\n          <CardText>{comment.comment}</CardText>\n          <CardText className=\"ml-auto mr-3\">\n            -- {new Intl.DateTimeFormat('en-US',{\n                day:'2-digit',\n                month:'short',\n                year:'numeric'\n            }).format(new Date(comment.time))}\n          </CardText>\n        </CardBody>\n      </Card>\n  );\n}\n\nclass ProfilePage extends Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      comments:[],\n      user:{},\n      url:{}\n    }\n    this.handleSubmit=this.handleSubmit.bind(this);\n  }\n\tcomponentDidMount() {\n\t\tconsole.log(this.props.id);\n\t\tfetch(`http://localhost:4000/users/${this.props.id}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => this.setState({user: data}));\n\n    fetch(`http://localhost:4000/get_comments?to=${this.props.id}`)\n\t\t\t.then((response) => response.json())\n      .then((data) => {console.log(data);this.setState({comments:data.comments})})\n      \n        \n  }\n  handleSubmit(values){\n    console.log('Current State is: ' + JSON.stringify(values));\n      alert('Current State is: ' + JSON.stringify(values));\n\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json'},\n        credentials:\"include\",\n        body: JSON.stringify({ to: this.state.user._id, senderName:\"rachu\", comment:values.comment })\n        };\n      fetch('http://localhost:4000/api/add_comment', requestOptions)\n        .then(response => response.json())\n        .then(data => {console.log(data);this.setState({comments: [...this.state.comments, data]})});\n  }\n  \n\n\trender() {\n\t\tconst dispComment = this.state.comments.map((comment) => {\n\t\t\treturn (\n\t\t\t\t<Col md={6}>\n\t\t\t\t\t<RenderComment comment={comment} />\n\t\t\t\t</Col>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"container-banner\">\n\t\t\t\t\t<img src={this.state.user.imageURL} alt=\"Avatar\" height=\"170\" width=\"170\" />\n\t\t\t\t\t<h2> {this.state.user.name} </h2>\n\t\t\t\t\t<Row>{dispComment}</Row>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container-banner\">\n\t\t\t\t\t<LocalForm onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t<Row className=\"form-group\">\n\t\t\t\t\t\t\t<Col md={12}>\n\t\t\t\t\t\t\t\t<Control.textarea\n\t\t\t\t\t\t\t\t\tmodel=\".comment\"\n\t\t\t\t\t\t\t\t\tid=\"comment\"\n\t\t\t\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Button outline type=\"submit\">\n\t\t\t\t\t\t\t<span className=\"fa fa-pencil\" /> Submit Comment\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</LocalForm>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n    // REACTGA.pageview('/' + JSON.stringify(this.state.user));\n\t}\n}\nexport default ProfilePage;\n","/home/naren/Documents/projects/farewell/Farewell/src/components/signup.js",["80","81","82","83","84","85","86","87","88","89"],"import React, {Component} from \"react\";\nimport {Button, Label, Col, Row} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { min } from \"d3\";\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\nconst minLength = (len) => (val) => (val) && (val.length>=len);\nconst eqLength = (len) => (val) => (val) && (val.length==len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\n\nclass Signup extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            input:\"\",\n            user:{}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);  \n        this.handleChange = this.handleChange.bind(this);      \n    }\n\n    handleChange(event){\n        let input=this.state.input;\n        input=event.target.value;\n        this.setState({\n            input:input\n        });\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        \n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({name:values.name, email:values.email, password:values.password, branch:values.branch, batch:values.batch, college:\"IIT PATNA\", imageURL:values.imageURL, size:30})\n        };\n        fetch('http://localhost:4000/signup', requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState({user: data}));\n            alert(this.state.user.message)    \n\n      \n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-9\">\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".name\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'This is a required field, ',\n                                            minLength: 'Must be greater than 2 characters, ',\n                                            maxLength: 'Must be 30 characters or less'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Webmail\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                         />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'This is a required field, ',\n                                            validEmail: 'Enter college webmail'\n                                        }}\n                                     />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\n                                <Col md={9}>\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    onChange={this.handleChange}\n                                    validators={{\n                                        required, minLength: minLength(8)\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".password\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        minLength: 'Enter min 8 characters'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"re_password\" md={3}>Re-enter password</Label>\n                                <Col md={9}>\n                                    <Control.text type=\"password\" model=\".re_password\" id=\"re_password\" name=\"re_password\"\n                                    className=\"form-control\"\n                                    placeholder=\"Password\"\n                                    validators={{\n                                        required, passMatch: passMatch(this.state.input)\n                                    }}/>\n                                    <Errors \n                                    className=\"text-danger\"\n                                    model=\".re_password\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        passMatch: 'Passwords should match'\n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"branch\" md={3}>Branch</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".branch\" id=\"branch\" name=\"branch\"\n                                    className=\"form-control\"\n                                    placeholder=\"Branch Code\"\n                                    validators={{\n                                        required, eqLength: eqLength(2)\n                                    }}    \n                                    />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".branch\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        eqLength: \"Enter branch code, e.g 'CS, EE'\"                                        \n                                    }}\n                                    />                \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".batch\" id=\"batch\" name=\"batch\"\n                                    className=\"form-control\"\n                                    placeholder=\"Joining Year\"\n                                    validators={{\n                                        required, isNumber, eqLength: eqLength(4)\n                                    }}    \n                                    />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".batch\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, ',\n                                        isNumber: 'Enter a number',\n                                        eqLength: \"Enter year, e.g '2021'\"                                        \n                                    }}\n                                    />                \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"imageURL\" md={3}>imageURL</Label>\n                                <Col md={9}>\n                                    <Control.text model=\".imageURL\" id=\"imageURL\" name=\"imageURL\"\n                                    className=\"form-control\"\n                                    placeholder=\"URL\"\n                                    validators={{\n                                        required\n                                    }}    \n                                    />\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".batch\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is a required field, '                                       \n                                    }}\n                                    />                \n                                </Col>\n                            </Row>                    \n                            <Row className=\"form-group\">\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\n                                    Submit\n                                </Button>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n{/* <Row className=\"form-group\">\n    <Label htmlFor=\"college\" md={3}>College</Label>\n    <Col md={9}>\n        <Control.text model=\".college\" id=\"college\" name=\"college\"\n        className=\"form-control\"\n        placeholder=\"College name\"\n        validators={{\n            required\n        }}\n        />\n        <Errors\n        className=\"text-danger\"\n        model=\".college\"\n        show=\"touched\"\n        messages={{\n            required: 'This is a required field'    \n        }}\n        />\n    </Col>\n</Row> */}\nexport default Signup;\n","/home/naren/Documents/projects/farewell/Farewell/src/components/bubbles.jsx",["90","91","92","93","94","95","96","97"],"/home/naren/Documents/projects/farewell/Farewell/src/redux/ActionTypes.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/shared/comments.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/shared/users.js",[],"/home/naren/Documents/projects/farewell/Farewell/src/components/Footer.jsx",["98","99"],"/home/naren/Documents/projects/farewell/Farewell/src/screens/about.jsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":9,"column":10,"nodeType":"106","messageId":"107","endLine":9,"endColumn":15},{"ruleId":"104","severity":1,"message":"109","line":10,"column":10,"nodeType":"106","messageId":"107","endLine":10,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":27,"column":2,"nodeType":"112","messageId":"113","endLine":29,"endColumn":3},{"ruleId":"114","severity":1,"message":"115","line":10,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":26},{"ruleId":"104","severity":1,"message":"118","line":36,"column":13,"nodeType":"106","messageId":"107","endLine":36,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":84,"column":9,"nodeType":"121","endLine":90,"endColumn":11},{"ruleId":"104","severity":1,"message":"122","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":10,"column":56,"nodeType":"125","messageId":"126","endLine":10,"endColumn":58},{"ruleId":"119","severity":1,"message":"127","line":61,"column":37,"nodeType":"121","endLine":67,"endColumn":44},{"ruleId":"119","severity":1,"message":"127","line":83,"column":37,"nodeType":"121","endLine":89,"endColumn":44},{"ruleId":"119","severity":1,"message":"127","line":104,"column":37,"nodeType":"121","endLine":110,"endColumn":41},{"ruleId":"119","severity":1,"message":"127","line":125,"column":37,"nodeType":"121","endLine":130,"endColumn":41},{"ruleId":"119","severity":1,"message":"127","line":145,"column":37,"nodeType":"121","endLine":151,"endColumn":39},{"ruleId":"119","severity":1,"message":"127","line":166,"column":37,"nodeType":"121","endLine":172,"endColumn":39},{"ruleId":"119","severity":1,"message":"127","line":188,"column":37,"nodeType":"121","endLine":194,"endColumn":39},{"ruleId":"128","severity":1,"message":"129","line":217,"column":1,"nodeType":"130","messageId":"131","endLine":236,"endColumn":11},{"ruleId":"104","severity":1,"message":"132","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":29},{"ruleId":"104","severity":1,"message":"133","line":3,"column":28,"nodeType":"106","messageId":"107","endLine":3,"endColumn":36},{"ruleId":"104","severity":1,"message":"134","line":3,"column":38,"nodeType":"106","messageId":"107","endLine":3,"endColumn":47},{"ruleId":"104","severity":1,"message":"135","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"136","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":13},{"ruleId":"104","severity":1,"message":"137","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":85,"column":44,"nodeType":"125","messageId":"140","endLine":85,"endColumn":45},{"ruleId":"138","severity":1,"message":"139","line":119,"column":44,"nodeType":"125","messageId":"140","endLine":119,"endColumn":45},{"ruleId":"141","severity":1,"message":"142","line":4,"column":1,"nodeType":"143","endLine":12,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":8,"column":20,"nodeType":"121","endLine":8,"endColumn":82},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","'batch' is defined but never used.","'packSiblings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'jwt' is defined but never used.","react/jsx-pascal-case","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'min' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]
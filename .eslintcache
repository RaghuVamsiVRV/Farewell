[{"C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\index.js":"1","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\App.jsx":"2","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\main.js":"3","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\signup.js":"4","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\Header.js":"5","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\screens\\profilePage.js":"6","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\bubbles.jsx":"7","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\Footer.jsx":"8","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\screens\\about.jsx":"9"},{"size":895,"mtime":1613540232262,"results":"10","hashOfConfig":"11"},{"size":562,"mtime":1613319555336,"results":"12","hashOfConfig":"11"},{"size":1031,"mtime":1613540232261,"results":"13","hashOfConfig":"11"},{"size":12591,"mtime":1613456454125,"results":"14","hashOfConfig":"11"},{"size":6676,"mtime":1613540232260,"results":"15","hashOfConfig":"11"},{"size":5585,"mtime":1613540414530,"results":"16","hashOfConfig":"11"},{"size":6199,"mtime":1613319555338,"results":"17","hashOfConfig":"11"},{"size":328,"mtime":1613457967337,"results":"18","hashOfConfig":"11"},{"size":1188,"mtime":1613480561951,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qx5hwt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\index.js",[],["46","47"],"C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\App.jsx",["48","49"],"import song from './media/bgm.mp3';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/main';\r\nimport { Provider } from 'react-redux';\r\nimport REACTGA from 'react-ga';\r\n\r\nREACTGA.initialize(process.env.REACT_APP_GA);\r\nREACTGA.pageview(window.location.pathname + window.location.search);\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\main.js",["50","51"],"import About from '../screens/about';\r\nimport React, { Component } from 'react';\r\nimport ProfilePage from '../screens/profilePage';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Bubbles from './bubbles';\r\nimport Header from './Header';\r\nimport Signup from './signup';\r\nimport { packSiblings } from 'd3';\r\n// import  editUser from \"./editUser\";\r\nimport Footer from './Footer';\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst Profile = ({ match }) => {\r\n\t\t\treturn <ProfilePage id={match.params.Id} />;\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/bubbles\" component={Bubbles} />\r\n\t\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t\t\t{/* <Route path=\"/editUser\" component={editUser}/> */}\r\n\t\t\t\t\t<Route path=\"/:Id\" component={Profile} />\r\n\t\t\t\t\t<Redirect to=\"/bubbles\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Main);\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\signup.js",["52","53","54","55","56","57","58"],"import React, {Component} from \"react\";\r\nimport {Button, Label, Col, Row} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { Alert } from \"reactstrap\";\r\n\r\nexport const AlertCustom = (props) => {    \r\n    if(props.text!==\"\"){\r\n        return (\r\n        <div>\r\n            <Alert color=\"danger\">\r\n                *{props.text}\r\n            </Alert>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div/>\r\n        )\r\n    }\r\n  }\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\r\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\r\n\r\nclass Signup extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            input:\"\",\r\n            user:{},\r\n            errors:\"\",\r\n            pictures:null\r\n        };\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.handleChange = this.handleChange.bind(this);      \r\n    }\r\n\r\n    handleChange(event){\r\n        let input=this.state.input;\r\n        input=event.target.value;\r\n        this.setState({\r\n            input:input,\r\n            errors:\"\"\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.setState({errors:\"\"})\r\n        var data = new FormData();\r\n        for(var value of Object.entries(values)){\r\n            data.append(value[0], value[1])\r\n        }\r\n        if(this.state.pictures!=null) data.append('file', this.state.pictures[0])\r\n        else data.append('file', null)\r\n        data.append('college', \"IIT PATNA\")\r\n        data.append('size',Math.floor(Math.random() * (50 - 30 + 1) + 30))\r\n         \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: data \r\n        };\r\n        fetch('http://localhost:4000/signup', requestOptions)\r\n            .then(response => {if(!response.ok){throw response} response.json()})\r\n            .then(data => {this.setState({user: data});alert(\"Verify your account via registered email\")})\r\n            .catch(err =>{\r\n                err.text().then(errMsg=>\r\n                    {\r\n                        var error=JSON.parse(errMsg);\r\n                        this.setState({errors: error.errors.email})\r\n                    })\r\n            })\r\n\r\n    }\r\n\r\n    onDrop(picture) {\r\n        this.setState({\r\n            pictures: picture\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            minLength: 'Must be greater than 2 characters, ',\r\n                                            maxLength: 'Must be 30 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Webmail\"\r\n                                        className=\"form-control\"\r\n                                        onChange={this.handleChange}\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            validEmail: 'Enter college webmail',\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col className=\"ml-auto\" md={9}>\r\n                                    <AlertCustom text={this.state.errors}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    validators={{\r\n                                        required, minLength: minLength(8)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        minLength: 'Enter min 8 characters'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"re_password\" md={3}>Re-enter password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".re_password\" id=\"re_password\" name=\"re_password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    validators={{\r\n                                        required, passMatch: passMatch(this.state.input)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".re_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        passMatch: 'Passwords should match'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"branch\" md={3}>Branch</Label>\r\n                                <Col md={9}>\r\n                                    <Control.select model=\".branch\" name =\"branch\" id=\"branch\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}>\r\n                                        <option/>\r\n                                        <option value=\"CS\">CS</option>\r\n                                        <option value=\"EE\">EE</option>\r\n                                        <option value=\"ME\">ME</option>\r\n                                        <option value=\"CE\">CE</option>\r\n                                        <option value=\"CB\">CB</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".branch\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\r\n                                <Col md={9}>\r\n                                <Control.select model=\".batch\" name =\"batch\" id=\"batch\" className=\"form-control\"\r\n                                validators={{required}}>\r\n                                    <option/>\r\n                                    <option value='2016'>2016</option>\r\n                                    <option value='2017'>2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                </Control.select> \r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".batch\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field'\r\n                                    }}\r\n                                />      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"image\" md={3}>Profile Photo</Label>\r\n                                <Col md={9}>\r\n                                    <ImageUploader\r\n                                        withIcon={false}\r\n                                        buttonText='Choose image'\r\n                                        onChange={this.onDrop}\r\n                                        label=\"Max file size: 0.5mb, accepted: jpg\"\r\n                                        imgExtension={['.jpg']}\r\n                                        maxFileSize={524280}\r\n                                    />               \r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <Row className=\"form-group\">\r\n    <Label htmlFor=\"college\" md={3}>College</Label>\r\n    <Col md={9}>\r\n        <Control.text model=\".college\" id=\"college\" name=\"college\"\r\n        className=\"form-control\"\r\n        placeholder=\"College name\"\r\n        validators={{\r\n            required\r\n        }}\r\n        />\r\n        <Errors\r\n        className=\"text-danger\"\r\n        model=\".college\"\r\n        show=\"touched\"\r\n        messages={{\r\n            required: 'This is a required field'    \r\n        }}\r\n        />\r\n    </Col>\r\n</Row> */}\r\nexport default Signup;\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\Header.js",["59","60"],"import React, { Component} from 'react';\r\nimport {\r\n\tNav,\r\n\tNavbar,\r\n\tNavbarToggler,\r\n\tCollapse,\r\n\tNavItem,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tForm,\r\n\tFormGroup,\r\n\tLabel,\r\n\tInput,\r\n\tButton,\r\n\tNavbarBrand\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport { Alert } from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nvar store = require('store');\r\n\r\nconst Msg = ({ text }) => (\r\n\t<div>\r\n\t  {text} \r\n\t</div>\r\n  )\r\nexport const AlertCustom = (props) => {\r\n\tif (props.text !== '') {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Alert color=\"danger\">{props.text}</Alert>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <div />;\r\n\t}\r\n};\r\nclass Header extends Component {\r\n\r\n\r\n    constructor(props)    \r\n    {\r\n        super(props);\r\n        var isLoggedIn=store.get('loginStatus');\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n            user:{},\r\n            passErr:\"\",\r\n            emailErr:\"\",\r\n            loginStatus:isLoggedIn?isLoggedIn.loginStatus:{user:\"\", message:\"logged out\"}\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    handleChange(event){\r\n        var field = event.target.id\r\n        if(field===\"password\")\r\n            this.setState({passErr:\"\"})\r\n        else if(field===\"username\")\r\n            this.setState({emailErr:\"\"})\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal()\r\n    {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n            passErr:\"\",\r\n            emailErr:\"\"\r\n            \r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\", \"Accept\":\"application/json\"},\r\n            credentials:'include',\r\n            body: JSON.stringify({email:this.username.value, password:this.password.value})\r\n        };\r\n        fetch('http://localhost:4000/login', requestOptions)\r\n            .then(response =>{ if(!response.ok){throw response} return response.json()})\r\n            .then(data => {this.setState({loginStatus: data});store.set('loginStatus', {loginStatus:data});toast.dark(({}) => <Msg text={this.state.loginStatus.message}/>);\r\n            fetch(`http://localhost:4000/users/${this.state.loginStatus.user}`)\r\n            .then(response => response.json())\r\n            .then(data=>{this.setState({user: data});store.set('userName',{userName:this.state.user.name});store.set('userID', {userID:this.state.loginStatus.user})});this.toggleModal();this.setState({errors:\"\"})})\r\n            .catch(err =>{\r\n                err.text().then(errMsg=>\r\n                    {\r\n                        var error=JSON.parse(errMsg);\r\n                        this.setState({emailErr: error.errors.email, passErr: error.errors.password})\r\n                    })\r\n            })\r\n        event.preventDefault();\r\n        \r\n    }\r\n    handleLogout(){\r\n        fetch('http://localhost:4000/logout')\r\n            .then(response => response.json())\r\n            .then(data => {toast.dark(({}) => <Msg text={data.message}/>);Cookies.remove('jwt'); this.setState({loginStatus:{}}); store.clearAll();})\r\n            \r\n    }\r\n\r\n\t\r\n\trender() {\r\n\t\tfunction Signup({ loginStatus }) {\r\n\t\t\tif (loginStatus.message === 'logged in') {\r\n\t\t\t\treturn <div />;\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<NavLink className=\"nav-link\" to=\"/signup\">\r\n\t\t\t\t\t\t<span className=\"fa fa-sign-in fa-lg\"> Signup</span>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction Profile({ loginStatus }) {\r\n\t\t\tvar userID = store.get('userID');\r\n\t\t\tif (loginStatus.message === 'logged in') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<NavLink className=\"nav-link\" to={`/${userID ? userID.userID : loginStatus.user}`}>\r\n\t\t\t\t\t\tProfile\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn <div />;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction Auth({ toggleModal, handleLogout, loginStatus }) {\r\n\t\t\tif (loginStatus.message === 'logged in') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button outline onClick={handleLogout} size=\"sm\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-sign-in fa-lg\"> Logout</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button outline onClick={toggleModal} size=\"sm\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Navbar dark expand=\"md\">\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggleNav} />\r\n\t\t\t\t\t\t<NavbarBrand className=\"mr-auto\" href=\"/\"><div className=\"title\">Al-Vida</div></NavbarBrand>\r\n\t\t\t\t\t\t<Collapse isOpen={this.state.isNavOpen} navbar>\r\n\t\t\t\t\t\t\t<Nav navbar>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t<Profile loginStatus={this.state.loginStatus} />\r\n\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t\t<Signup loginStatus={this.state.loginStatus} />\r\n\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\r\n\t\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t\t<Auth\r\n\t\t\t\t\t\t\t\t\ttoggleModal={this.toggleModal}\r\n\t\t\t\t\t\t\t\t\thandleLogout={this.handleLogout}\r\n\t\t\t\t\t\t\t\t\tloginStatus={this.state.loginStatus}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t</Nav>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Navbar>\r\n\t\t\t\t\r\n\t\t\t\t<Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n\t\t\t\t\t<ModalHeader className=\"bg-primary text-white\"  toggle={this.toggleModal}>Login</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Form onSubmit={this.handleLogin}>\r\n\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t<Label htmlFor=\"username\">Webmail</Label>\r\n\t\t\t\t\t\t\t\t\t<Input onChange={this.handleChange} type=\"text\" id=\"username\" name=\"username\" innerRef={(input)=>this.username=input}/>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t<AlertCustom text={this.state.emailErr}/>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t<Label htmlFor=\"password\">Password</Label>\r\n\t\t\t\t\t\t\t\t\t<Input onChange={this.handleChange} type=\"password\" id=\"password\" name=\"password\" innerRef={(input)=>this.password=input}/>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t<AlertCustom text={this.state.passErr}/>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t<Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t</Modal>            \r\n\t\t\t<ToastContainer position=\"bottom-right\"/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Header;\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\screens\\profilePage.js",["61","62"],"import React, { Component } from 'react';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Button, Row, Col, Card, CardTitle, CardSubtitle, CardText, CardBody,Alert } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from \"react-router-dom\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nvar store = require('store');\r\n\r\n\r\n\r\n\r\nfunction RenderComment({ userB, userB1, comment, onDelete}) {\r\n\r\n\tconst handleDelete = () => {\r\n\t\tfetch(`http://localhost:4000/api/delete_comment/${comment._id}`, {method:\"DELETE\", credentials:'include', headers: { \"Content-Type\": \"application/json\", \"Accept\":\"application/json\"}})\r\n\t\t.then((response)=>{if(!response.ok){throw response} return response.json()})\r\n\t\t.then((data)=> {console.log(data);onDelete()})\r\n\t\t.catch(err =>{\r\n\t\t\terr.text().then(errMsg=>\r\n\t\t\t\t{\r\n\t\t\t\t\tvar error=JSON.parse(errMsg);\r\n\t\t\t\t\ttoast.error(error.error, {toastId:\"error\"})\r\n\t\t\t\t})\r\n\t\t})\r\n\t  }\r\n\treturn (\r\n\t\t<Card\r\n\t\t\tkey={comment._id}\r\n\t\t\tbody\r\n\t\t\tinverse\r\n\t\t\tclassName=\"p-3\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundColor: \"white\",\r\n\t\t\t\tborderBottomColor: '#000',\r\n\t\t\t\tborderBottomWidth: \"4px\",\r\n\t\t\t\tborderRightColor: '#000',\r\n\t\t\t\tborderRightWidth: \"2px\",\r\n\t\t\t\tpadding: '10px',\r\n\t\t\t\tmargin: 10\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<CardTitle md={10} style={{fontFamily: 'Biryani',color: \"#000\"}} tag=\"h5\"><Link className=\"text-secondary\" to={`/${comment.from}`}>{comment.senderName}</Link> <Button color=\"link\" className=\"text-danger\" size=\"sm\" onClick={()=>handleDelete(comment._id)}><DeleteOutlinedIcon fontSize=\"small\" /> </Button></CardTitle>\r\n\t\t\t\r\n\t\t\t<CardSubtitle style={{color: \"#000\"}} tag=\"h5\">{userB1}{','}{userB}</CardSubtitle>\r\n\t\t\t<CardBody>\r\n\t\t\t\t<CardText style={{fontFamily: 'Coming Soon' , color: \"#000\", fontWeight:'bold'}}>{comment.comment}</CardText>\r\n\t\t\t\t<CardText style={{color: \"#000\" , fontSize:\"12px\", position: 'absolute', bottom:'0', right:'0', margin: '8px'}} className=\"ml-auto mr-3\">\r\n\t\t\t\t\t--{' '}\r\n\t\t\t\t\t{new Intl.DateTimeFormat('en-US', {\r\n\t\t\t\t\t\tday: '2-digit',\r\n\t\t\t\t\t\tmonth: 'short',\r\n\t\t\t\t\t\tyear: 'numeric'\r\n\t\t\t\t\t}).format(new Date(comment.time))}\r\n\t\t\t\t</CardText>\r\n\t\t\t</CardBody>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nclass ProfilePage extends Component {\r\n\tconstructor(props) {\r\n\t\tlet userID=store.get('userID');\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomments: [],\r\n\t\t\tuser: {},\r\n\t\t\turl: {}, \r\n\t\t\tisOpen:false, \r\n\t\t\tshowComment:userID?userID.userID!==this.props.id:true, \r\n\t\t\ttext:\"\"\r\n\t\t};\r\n\t\tthis.handleDelete = this.handleDelete.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.toggleAlert = this.toggleAlert.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\thandleDelete(){\r\n\t\tfetch(`http://localhost:4000/get_comments?to=${this.props.id}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => this.setState({ comments: data.comments }));\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tfetch(`http://localhost:4000/users/${this.props.id}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => this.setState({ user: data }));\r\n\r\n\t\tfetch(`http://localhost:4000/get_comments?to=${this.props.id}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => this.setState({ comments: data.comments }));\r\n\t}\r\n\r\n\thandleChange(){\r\n\t\tthis.setState({isOpen:false})\r\n\t}\r\n\thandleSubmit(values, event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({text:\"\"})\r\n\t\tvar senderName = store.get('userName');\r\n\t\tif(senderName != null){\r\n\t\t\tif (values.comment) {\r\n\t\t\t\tconst requestOptions = {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tto: this.state.user._id,\r\n\t\t\t\t\t\tsenderName: senderName.userName,\r\n\t\t\t\t\t\tcomment: values.comment\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t\tfetch('http://localhost:4000/api/add_comment', requestOptions)\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((data) => this.setState({ comments: [ ...this.state.comments, data ] }));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttoast.dark(\"Enter Comment\")\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttoast.dark(\"Please Login\")\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\ttoggleAlert(){\r\n\t\tthis.setState({isOpen:false})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tfunction AddComment({show}){\r\n\t\t\tif(show===true){\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t\t\t<Control.textarea\r\n\t\t\t\t\t\t\t\tmodel=\".comment\"\r\n\t\t\t\t\t\t\t\tid=\"comment\"\r\n\t\t\t\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Button outline type=\"submit\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-pencil\"/> Submit Comment\r\n\t\t\t\t\t\t</Button>\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn(<div/>)\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst dispComment = this.state.comments.map((comment) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Col md={4}>\r\n\t\t\t\t\t<RenderComment userB={this.state.user.batch} userB1={this.state.user.branch} comment={comment} onDelete={this.handleDelete}/>\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"container-banner\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={'/photos/' + this.state.user.imageURL || '/photos/anushree.jpg'}\r\n\t\t\t\t\t\talt=\"Avatar\"\r\n\t\t\t\t\t\theight=\"170\"\r\n\t\t\t\t\t\twidth=\"170\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h2 className=\"Tname\"> {this.state.user.name} </h2>\r\n\t\t\t\t\t<h5 className=\"Tname1\"> {this.state.user.branch}{', '}{this.state.user.batch} </h5>\r\n\t\t\t\t\t<Row>{dispComment}</Row>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-banner\">\r\n\t\t\t\t\t<LocalForm onSubmit={this.handleSubmit}>\t\r\n\t\t\t\t\t\t<AddComment show={this.state.showComment}/>\t\t\t\r\n\t\t\t\t\t</LocalForm>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ProfilePage;\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\bubbles.jsx",["63","64","65","66","67","68","69","70"],"import isMobile from 'ismobilejs';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport photo from '../media/photos/teja.jpg';\r\n\r\nclass BarChart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.myRef = React.createRef();\r\n\t}\r\n\t// definer() {\r\n\t// \tconst svg = d3.select(this.myRef.current);\r\n\t// \tvar defs = svg.append('defs');\r\n\t// \tdefs\r\n\t// \t\t// .selectAll('pattern')\r\n\t// \t\t// .data(bigga)\r\n\t// \t\t// .enter()\r\n\t// \t\t.append('pattern')\r\n\t// \t\t.attr('id', 'picture')\r\n\t// \t\t.attr('height', '100%')\r\n\t// \t\t.attr('width', '100%')\r\n\t// \t\t.attr('patterContentUnits', 'objectBoundingBox')\r\n\t// \t\t.append('image')\r\n\t// \t\t.attr('height', 1)\r\n\t// \t\t.attr('width', 1)\r\n\t// \t\t.attr('preserveAspectRatio', 'none')\r\n\t// \t\t.attr('xmlns', 'http://www.w3.org/2000/svg')\r\n\t// \t\t.attr('xmlns:href', require('../media/photos/anushree.jpg'));\r\n\t// }\r\n\tdrawChart(bigga) {\r\n\t\tconsole.log(process.env.REACT_APP_GA);\r\n\r\n\t\tconst height = window.innerHeight;\r\n\t\tconst width = window.innerWidth;\r\n\t\tvar forcedictX = { CE: width / 2, CS: width / 2, ME: width / 6, CB: width / 1.3, EE: width / 4.5 };\r\n\t\tvar forcedictY = { CE: height / 6, CS: height / 1.7, ME: height / 1.5, CB: height / 2, EE: height / 2.5 };\r\n\t\tvar colordict = { CE: '#c5aa84', CS: '#194b4f', ME: '#914529', CB: '#f26d7d', EE: '#d0343a' };\r\n\r\n\t\t// console.log(height);\r\n\r\n\t\tconst svg = d3.select(this.myRef.current);\r\n\t\tvar simulation = d3.forceSimulation().nodes(bigga);\r\n\t\tsimulation\r\n\t\t\t.force('charge_force', d3.forceManyBody().strength(200))\r\n\t\t\t.force('X', d3.forceX(width / 2))\r\n\t\t\t.force('Y', d3.forceY(height / 2))\r\n\t\t\t.force(\r\n\t\t\t\t'collide',\r\n\t\t\t\td3.forceCollide(function(d) {\r\n\t\t\t\t\treturn d.size + 7;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\tvar zoom_handler = d3.zoom().on('zoom', zoom_actions);\r\n\t\tzoom_handler(svg);\r\n\t\tfunction zoom_actions(event) {\r\n\t\t\tnode.attr('transform', event.transform);\r\n\t\t\ttexts.attr('transform', event.transform);\r\n\t\t}\r\n\r\n\t\tvar node = svg\r\n\t\t\t.append('g')\r\n\t\t\t.attr('class', 'nodes')\r\n\t\t\t.selectAll('circle')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('circle')\r\n\t\t\t.attr('r', (d) => d.size)\r\n\t\t\t.attr('fill', (d) => colordict[d.branch])\r\n\t\t\t.attr('stroke', 'white')\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size + 5);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\t\tnode.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\t// var i;\r\n\t\t// for (i = 0; i < bigga.length; i++) {\r\n\t\t// \tif (bigga[i].brach == 'CE') {\r\n\t\t// \t\tnode.data(bigga[i]);\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tvar texts = svg\r\n\t\t\t.append('g')\r\n\t\t\t.selectAll('text')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('text')\r\n\t\t\t.text((d) => d.name)\r\n\t\t\t.style('fill', 'white')\r\n\t\t\t.attr('opacity', function() {\r\n\t\t\t\tif (isMobile(window.navigator).phone || isMobile(window.navigator).tablet) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('10').attr('opacity', '1');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('2000').attr('opacity', '0');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\r\n\t\ttexts.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\tnode.append('title').text((d) => d.name).attr('opacity', '1');\r\n\t\tsimulation.on('tick', tickActions);\r\n\t\tfunction tickActions() {\r\n\t\t\ttexts.attr('x', (d) => d.x - d.name.length * 4);\r\n\t\t\ttexts.attr('y', (d) => d.y + 3);\r\n\t\t\tnode\r\n\t\t\t\t.attr('cx', function(d) {\r\n\t\t\t\t\treturn d.x;\r\n\t\t\t\t})\r\n\t\t\t\t.attr('cy', function(d) {\r\n\t\t\t\t\treturn d.y;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar drag_handler = d3.drag().on('start', drag_start).on('drag', drag_drag).on('end', drag_end);\r\n\t\tfunction drag_start(event) {\r\n\t\t\tif (!event.active) simulation.alphaTarget(0.3).restart();\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\t\tfunction drag_drag(event) {\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\r\n\t\tfunction drag_end(event) {\r\n\t\t\tif (d3.active) simulation.alphaTarget(0);\r\n\t\t\tevent.subject.fx = null;\r\n\t\t\tevent.subject.fy = null;\r\n\t\t}\r\n\t\tdrag_handler(node);\r\n\t\tdrag_handler(texts);\r\n\r\n\t\td3.select('#branchwise').on('click', function() {\r\n\t\t\tsimulation\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'X',\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.forceX(function(d) {\r\n\t\t\t\t\t\t\treturn forcedictX[d.branch];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.strength(0.5)\r\n\t\t\t\t)\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'Y',\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.forceY(function(d) {\r\n\t\t\t\t\t\t\treturn forcedictY[d.branch];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.strength(0.5)\r\n\t\t\t\t)\r\n\t\t\t\t.alphaTarget(0.5)\r\n\t\t\t\t.restart();\r\n\t\t});\r\n\t\td3.select('#normal').on('click', function(d) {\r\n\t\t\tsimulation.force('X', d3.forceX(width / 2)).force('Y', d3.forceY(height / 2)).alphaTarget(0.3).restart();\r\n\t\t});\r\n\r\n\t\t// const svg = d3.select('body').append('svg').attr('width', 700).attr('height', 300);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// this.definer();\r\n\r\n\t\tfetch('http://localhost:4000/users?batch=2017&college=IIT PATNA')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((seniors) => this.drawChart(seniors.users));\r\n\r\n\t\t// const data = axios.get('http://localhost:4000/users?batch=2017&college=IIT PATNA');\r\n\t\t// console.log(data);\r\n\t\t// this.drawChart();\r\n\t}\r\n\tsvgHeight = window.innerHeight - 100;\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div class={'patterner'}>\r\n\t\t\t\t<div style={{ background: 'black', 'text-align': 'center' }}>\r\n\t\t\t\t\t<Button id={'branchwise'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tBranchwise\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button id={'normal'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tNormal\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<svg\r\n\t\t\t\t\tref={this.myRef}\r\n\t\t\t\t\tstyle={{ width: window.innerWidth, height: this.svgHeight, background: 'black' }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarChart;\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\components\\Footer.jsx",["71","72"],"import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function() {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<footer >\r\n\t\t\t\t<Link className=\"small\" to=\"/about\">\r\n\t\t\t\t\t<img height=\"20px\" width=\"20px\" margin=\"16px\" src=\"/photos/info_icon.png\" />\r\n\t\t\t\t</Link>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\raghu\\Documents\\Z\\Naren\\farewell\\src\\screens\\about.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"82","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":13,"column":2,"nodeType":"85","messageId":"86","endLine":15,"endColumn":3},{"ruleId":"87","severity":1,"message":"88","line":97,"column":37,"nodeType":"89","endLine":103,"endColumn":44},{"ruleId":"87","severity":1,"message":"88","line":119,"column":37,"nodeType":"89","endLine":126,"endColumn":44},{"ruleId":"87","severity":1,"message":"88","line":146,"column":37,"nodeType":"89","endLine":152,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":167,"column":37,"nodeType":"89","endLine":172,"endColumn":41},{"ruleId":"87","severity":1,"message":"90","line":187,"column":37,"nodeType":"89","endLine":190,"endColumn":40},{"ruleId":"87","severity":1,"message":"90","line":211,"column":33,"nodeType":"89","endLine":212,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":253,"column":1,"nodeType":"93","messageId":"94","endLine":272,"endColumn":11},{"ruleId":"95","severity":1,"message":"96","line":97,"column":120,"nodeType":"97","messageId":"98","endLine":97,"endColumn":122},{"ruleId":"95","severity":1,"message":"96","line":114,"column":40,"nodeType":"97","messageId":"98","endLine":114,"endColumn":42},{"ruleId":"77","severity":1,"message":"99","line":3,"column":78,"nodeType":"79","messageId":"80","endLine":3,"endColumn":83},{"ruleId":"87","severity":1,"message":"100","line":138,"column":8,"nodeType":"89","endLine":144,"endColumn":10},{"ruleId":"77","severity":1,"message":"101","line":2,"column":18,"nodeType":"79","messageId":"80","endLine":2,"endColumn":29},{"ruleId":"77","severity":1,"message":"102","line":3,"column":28,"nodeType":"79","messageId":"80","endLine":3,"endColumn":36},{"ruleId":"77","severity":1,"message":"103","line":3,"column":38,"nodeType":"79","messageId":"80","endLine":3,"endColumn":47},{"ruleId":"77","severity":1,"message":"104","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"105","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":13},{"ruleId":"77","severity":1,"message":"106","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":85,"column":44,"nodeType":"109","messageId":"110","endLine":85,"endColumn":45},{"ruleId":"107","severity":1,"message":"108","line":119,"column":44,"nodeType":"109","messageId":"110","endLine":119,"endColumn":45},{"ruleId":"111","severity":1,"message":"112","line":4,"column":1,"nodeType":"113","endLine":14,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":9,"column":6,"nodeType":"89","endLine":9,"endColumn":82},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'packSiblings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Alert' is defined but never used.","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]
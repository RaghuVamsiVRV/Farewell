[{"E:\\my work\\Farewell\\src\\index.js":"1","E:\\my work\\Farewell\\src\\App.jsx":"2","E:\\my work\\Farewell\\src\\redux\\configureStore.js":"3","E:\\my work\\Farewell\\src\\components\\main.js":"4","E:\\my work\\Farewell\\src\\redux\\comments.js":"5","E:\\my work\\Farewell\\src\\redux\\users.js":"6","E:\\my work\\Farewell\\src\\components\\signup.js":"7","E:\\my work\\Farewell\\src\\screens\\profilePage.js":"8","E:\\my work\\Farewell\\src\\components\\Header.js":"9","E:\\my work\\Farewell\\src\\components\\bubbles.jsx":"10","E:\\my work\\Farewell\\src\\components\\Footer.jsx":"11","E:\\my work\\Farewell\\src\\screens\\about.jsx":"12","E:\\my work\\Farewell\\src\\redux\\ActionTypes.js":"13","E:\\my work\\Farewell\\src\\shared\\comments.js":"14","E:\\my work\\Farewell\\src\\shared\\users.js":"15"},{"size":467,"mtime":1611408984071,"results":"16","hashOfConfig":"17"},{"size":700,"mtime":1612523557720,"results":"18","hashOfConfig":"17"},{"size":326,"mtime":1612284025191,"results":"19","hashOfConfig":"17"},{"size":945,"mtime":1613043497763,"results":"20","hashOfConfig":"17"},{"size":501,"mtime":1612284025187,"results":"21","hashOfConfig":"17"},{"size":380,"mtime":1612284025194,"results":"22","hashOfConfig":"17"},{"size":12054,"mtime":1613043497764,"results":"23","hashOfConfig":"17"},{"size":3289,"mtime":1613043497774,"results":"24","hashOfConfig":"17"},{"size":6377,"mtime":1613043497655,"results":"25","hashOfConfig":"17"},{"size":6196,"mtime":1613043497656,"results":"26","hashOfConfig":"17"},{"size":304,"mtime":1613043497654,"results":"27","hashOfConfig":"17"},{"size":1232,"mtime":1613043497764,"results":"28","hashOfConfig":"17"},{"size":80,"mtime":1612284025100,"results":"29","hashOfConfig":"17"},{"size":1126,"mtime":1611408984080,"results":"30","hashOfConfig":"17"},{"size":962,"mtime":1612284025444,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1nxtvle",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\my work\\Farewell\\src\\index.js",[],["72","73"],"E:\\my work\\Farewell\\src\\App.jsx",["74"],"import song from './media/bgm.mp3';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/main';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\nimport REACTGA from 'react-ga';\r\n\r\nREACTGA.initialize(process.env.REACT_APP_GA);\r\nREACTGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","E:\\my work\\Farewell\\src\\redux\\configureStore.js",[],"E:\\my work\\Farewell\\src\\components\\main.js",["75","76"],"import About from '../screens/about';\r\nimport React, { Component } from 'react';\r\nimport ProfilePage from '../screens/profilePage';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Bubbles from './bubbles';\r\nimport Header from './Header';\r\nimport Signup from './signup';\r\n\r\nimport { packSiblings } from 'd3';\r\nimport Footer from './Footer';\r\n\r\nclass Main extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst Profile = ({ match }) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ProfilePage id={match.params.Id} />\r\n\t\t\t);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/bubbles\" component={Bubbles} />\r\n\t\t\t\t\t<Route path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t\t\t<Route path=\"/:Id\" component={Profile} />\r\n\t\t\t\t\t<Redirect to=\"/bubbles\" />\r\n\t\t\t\t</Switch>\r\n\t\t\t\t<Footer />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Main);\r\n","E:\\my work\\Farewell\\src\\redux\\comments.js",[],"E:\\my work\\Farewell\\src\\redux\\users.js",["77"],"import { USERS } from \"../shared/users\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Users = (state = USERS, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_USER:\r\n            var user = action.payload;\r\n            user.id = state.length;\r\n            console.log(\"new user: \", user);\r\n        default:\r\n            return state;\r\n    }\r\n};","E:\\my work\\Farewell\\src\\components\\signup.js",["78","79","80","81","82","83","84","85","86","87","88","89"],"import React, {Component} from \"react\";\r\nimport {Button, Label, Col, Row} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { min } from \"d3\";\r\n\r\nvar store=require('store')\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst eqLength = (len) => (val) => (val) && (val.length==len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@iitp\\.ac\\.in$/i.test(val);\r\nconst passMatch = (Val) => (val) => (val) && (Val) && (val===Val);\r\n\r\nclass Signup extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            input:\"\",\r\n            user:{}\r\n        };\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);  \r\n        this.handleChange = this.handleChange.bind(this);      \r\n    }\r\n\r\n    handleChange(event){\r\n        let input=this.state.input;\r\n        input=event.target.value;\r\n        this.setState({\r\n            input:input\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({name:values.name, email:values.email, password:values.password, branch:values.branch, batch:values.batch, college:\"IIT PATNA\", size:Math.floor(Math.random() * (50 - 30 + 1) + 30)})\r\n        };\r\n        fetch('http://localhost:4000/signup', requestOptions)\r\n            .then(response => {if(!response.ok){throw response} response.json()})\r\n            .then(data => {this.setState({user: data});alert(\"Login to view your account\")})\r\n            .catch(err =>{\r\n                err.text().then(errMsg=>\r\n                    {\r\n                        var error=JSON.parse(errMsg);\r\n                        alert(error.error)\r\n                    })\r\n            })\r\n\r\n    }\r\n\r\n    onDrop(picture) {\r\n        this.setState({\r\n            pictures: this.state.pictures.concat(picture),\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                            <Label htmlFor=\"name\" md={3}>Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            minLength: 'Must be greater than 2 characters, ',\r\n                                            maxLength: 'Must be 30 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={3}>Webmail</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Webmail\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field, ',\r\n                                            validEmail: 'Enter college webmail'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={3}>Password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    onChange={this.handleChange}\r\n                                    validators={{\r\n                                        required, minLength: minLength(8)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        minLength: 'Enter min 8 characters'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"re_password\" md={3}>Re-enter password</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text type=\"password\" model=\".re_password\" id=\"re_password\" name=\"re_password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Password\"\r\n                                    validators={{\r\n                                        required, passMatch: passMatch(this.state.input)\r\n                                    }}/>\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".re_password\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field, ',\r\n                                        passMatch: 'Passwords should match'\r\n                                    }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"branch\" md={3}>Branch</Label>\r\n                                <Col md={9}>\r\n                                    <Control.select model=\".branchSelect\" name =\"branchSelect\" id=\"branchSelect\" className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }}>\r\n                                        <option/>\r\n                                        <option value=\"CS\">CS</option>\r\n                                        <option value=\"EE\">EE</option>\r\n                                        <option value=\"ME\">ME</option>\r\n                                        <option value=\"CE\">CE</option>\r\n                                        <option value=\"CB\">CB</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".branchSelect\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'This is a required field'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"batch\" md={3}>Batch</Label>\r\n                                <Col md={9}>\r\n                                <Control.select model=\".batchSelect\" name =\"batchSelect\" id=\"batchSelect\" className=\"form-control\"\r\n                                validators={{required}}>\r\n                                    <option/>\r\n                                    <option value='2016'>2016</option>\r\n                                    <option value='2017'>2017</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                </Control.select> \r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".batchSelect\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'This is a required field'\r\n                                    }}\r\n                                />      \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"image\" md={3}>Profile Photo</Label>\r\n                                <Col md={9}>\r\n                                    <ImageUploader\r\n                                        withIcon={false}\r\n                                        buttonText='Choose image'\r\n                                        onChange={this.onDrop}\r\n                                        label=\"Max file size: 0.5mb, accepted: jpg\"\r\n                                        imgExtension={['.jpg']}\r\n                                        maxFileSize={524280}\r\n                                    />               \r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Button className=\"ml-2\" type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <Row className=\"form-group\">\r\n    <Label htmlFor=\"college\" md={3}>College</Label>\r\n    <Col md={9}>\r\n        <Control.text model=\".college\" id=\"college\" name=\"college\"\r\n        className=\"form-control\"\r\n        placeholder=\"College name\"\r\n        validators={{\r\n            required\r\n        }}\r\n        />\r\n        <Errors\r\n        className=\"text-danger\"\r\n        model=\".college\"\r\n        show=\"touched\"\r\n        messages={{\r\n            required: 'This is a required field'    \r\n        }}\r\n        />\r\n    </Col>\r\n</Row> */}\r\nexport default Signup;\r\n","E:\\my work\\Farewell\\src\\screens\\profilePage.js",["90"],"import React, { Component } from 'react';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport {Button, Row, Col, Card, CardTitle, CardText, CardBody} from 'reactstrap';\r\n\r\n\r\nvar store=require('store');\r\nfunction RenderComment({comment}){\r\n  return(\r\n      <Card key={comment._id}> \r\n        <CardTitle tag=\"h5\">{comment.senderName}</CardTitle>\r\n        <CardBody>\r\n          <CardText>{comment.comment}</CardText>\r\n          <CardText className=\"ml-auto mr-3\">\r\n            -- {new Intl.DateTimeFormat('en-US',{\r\n                day:'2-digit',\r\n                month:'short',\r\n                year:'numeric'\r\n            }).format(new Date(comment.time))}\r\n          </CardText>\r\n        </CardBody>\r\n      </Card>\r\n  );\r\n}\r\n\r\nclass ProfilePage extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      comments:[],\r\n      user:{},\r\n      url:{}\r\n    }\r\n    this.handleSubmit=this.handleSubmit.bind(this);\r\n  }\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(this.props.id);\r\n\t\tfetch(`http://localhost:4000/users/${this.props.id}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => this.setState({user: data}));\r\n\r\n    fetch(`http://localhost:4000/get_comments?to=${this.props.id}`)\r\n\t\t\t.then((response) => response.json())\r\n      .then((data) => {console.log(data);this.setState({comments:data.comments})})\r\n      \r\n        \r\n  }\r\n  handleSubmit(values){\r\n    console.log('Current State is: ' + JSON.stringify(values));\r\n      alert('Current State is: ' + JSON.stringify(values));\r\n        var senderName=store.get('userName');  \r\n        console.log(senderName);\r\n      if(senderName!=null){\r\n        const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json'},\r\n          credentials:\"include\",\r\n          body: JSON.stringify({ to: this.state.user._id, senderName:senderName.userName, comment:values.comment })\r\n          };\r\n        fetch('http://localhost:4000/api/add_comment', requestOptions)\r\n          .then(response => response.json())\r\n          .then(data => {console.log(data);this.setState({comments: [...this.state.comments, data]})});\r\n      }\r\n      else{\r\n        alert('Please Login');\r\n      }\r\n        \r\n  }\r\n  \r\n\r\n\trender() {\r\n\t\tconst dispComment = this.state.comments.map((comment) => {\r\n\t\t\treturn (\r\n\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t<RenderComment comment={comment} />\r\n\t\t\t\t</Col>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"container-banner\">\r\n\t\t\t\t\t<img src={this.state.user.imageURL||'/photos/anushree.jpg'} alt=\"Avatar\" height=\"170\" width=\"170\" />\r\n\t\t\t\t\t<h2> {this.state.user.name} </h2>\r\n\t\t\t\t\t<Row>{dispComment}</Row>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container-banner\">\r\n\t\t\t\t\t<LocalForm onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t<Row className=\"form-group\">\r\n\t\t\t\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t\t\t\t<Control.textarea\r\n\t\t\t\t\t\t\t\t\tmodel=\".comment\"\r\n\t\t\t\t\t\t\t\t\tid=\"comment\"\r\n\t\t\t\t\t\t\t\t\tname=\"comment\"\r\n\t\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Button outline type=\"submit\">\r\n\t\t\t\t\t\t\t<span className=\"fa fa-pencil\" /> Submit Comment\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</LocalForm>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    );\r\n    // REACTGA.pageview('/' + JSON.stringify(this.state.user));\r\n\t}\r\n}\r\nexport default ProfilePage;\r\n","E:\\my work\\Farewell\\src\\components\\Header.js",["91","92"],"import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarToggler, Collapse, NavItem, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport { Errors } from 'react-redux-form';\r\nvar store=require('store');\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props)    \r\n    {\r\n        super(props);\r\n        var isLoggedIn=store.get('loginStatus');\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen: false,\r\n            user:{},\r\n            loginStatus:isLoggedIn?isLoggedIn.loginStatus:{user:\"\", message:\"logged out\"}\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n    \r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal()\r\n    {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n    \r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \"Content-Type\": \"application/json\", \"Accept\":\"application/json\"},\r\n            credentials:'include',\r\n            body: JSON.stringify({email:this.username.value, password:this.password.value})\r\n        };\r\n        fetch('http://localhost:4000/login', requestOptions)\r\n            .then(response =>{ if(!response.ok){throw \"Either email or password is incorrect\"} return response.json()})\r\n            .then(data => {this.setState({loginStatus: data});store.set('loginStatus', {loginStatus:data});\r\n            fetch(`http://localhost:4000/users/${this.state.loginStatus.user}`)\r\n            .then(response => response.json())\r\n            .then(data=>{this.setState({user: data});console.log(this.state.user);store.set('userName',{userName:this.state.user.name});store.set('userID', {userID:this.state.loginStatus.user})})})\r\n            .catch( err => {\r\n                alert(err)\r\n            })    \r\n\r\n        event.preventDefault();\r\n        \r\n    }\r\n    handleLogout(){\r\n        fetch('http://localhost:4000/logout')\r\n            .then(response => response.json())\r\n            .then(data => {alert(data.message);Cookies.remove('jwt'); this.setState({loginStatus:{}}); store.clearAll();})\r\n            \r\n    }\r\n\r\n\r\n    render(){\r\n        function Profile({loginStatus}){\r\n            if(loginStatus.message===\"logged in\"){\r\n                var userID=store.get('userID');\r\n                return(\r\n                <NavLink className=\"nav-link\" to={`/${userID?userID.userID:''}`}>Profile</NavLink>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <div/>\r\n                )\r\n            }\r\n        }\r\n        function Auth({toggleModal, handleLogout, loginStatus}){\r\n        if(loginStatus.message===\"logged in\"){\r\n            return(\r\n                <div>\r\n                    <Button outline onClick={handleLogout}>\r\n                          <span className=\"fa fa-sign-in fa-lg\"> Logout</span>\r\n                      </Button>\r\n                </div>  \r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                  <div>\r\n                      <Button outline onClick={toggleModal}>\r\n                            <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                        </Button>\r\n                  </div>  \r\n            );\r\n        }\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                                <Nav navbar>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/'><span className=\"fa fa-home fa-lg\"> Home</span></NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <Profile loginStatus={this.state.loginStatus}/>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink className=\"nav-link\" to='/signup'>\r\n                                            <span className=\"fa fa-sign-in fa-lg\"> Signup</span>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </Collapse>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Auth toggleModal={this.toggleModal} handleLogout={this.handleLogout} loginStatus={this.state.loginStatus}/>\r\n                        </NavItem>                                                \r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Webmail</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input)=>this.username=input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input)=>this.password=input}/>\r\n                            </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Header;","E:\\my work\\Farewell\\src\\components\\bubbles.jsx",["93","94","95","96","97","98","99","100"],"import isMobile from 'ismobilejs';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as d3 from 'd3';\r\nimport axios from 'axios';\r\nimport photo from '../media/photos/teja.jpg';\r\n\r\nclass BarChart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.myRef = React.createRef();\r\n\t}\r\n\t// definer() {\r\n\t// \tconst svg = d3.select(this.myRef.current);\r\n\t// \tvar defs = svg.append('defs');\r\n\t// \tdefs\r\n\t// \t\t// .selectAll('pattern')\r\n\t// \t\t// .data(bigga)\r\n\t// \t\t// .enter()\r\n\t// \t\t.append('pattern')\r\n\t// \t\t.attr('id', 'picture')\r\n\t// \t\t.attr('height', '100%')\r\n\t// \t\t.attr('width', '100%')\r\n\t// \t\t.attr('patterContentUnits', 'objectBoundingBox')\r\n\t// \t\t.append('image')\r\n\t// \t\t.attr('height', 1)\r\n\t// \t\t.attr('width', 1)\r\n\t// \t\t.attr('preserveAspectRatio', 'none')\r\n\t// \t\t.attr('xmlns', 'http://www.w3.org/2000/svg')\r\n\t// \t\t.attr('xmlns:href', require('../media/photos/anushree.jpg'));\r\n\t// }\r\n\tdrawChart(bigga) {\r\n\t\tconsole.log(process.env.REACT_APP_GA);\r\n\r\n\t\tconst height = window.innerHeight;\r\n\t\tconst width = window.innerWidth;\r\n\t\tvar forcedictX = { CE: width / 2, CS: width / 2, ME: width / 6, CB: width / 1.3, EE: width / 4.5 };\r\n\t\tvar forcedictY = { CE: height / 6, CS: height / 1.7, ME: height / 1.5, CB: height / 2, EE: height / 2.5 };\r\n\t\tvar colordict = { CE: '#c5aa84', CS: '#194b4f', ME: '#914529', CB: '#f26d7d', EE: '#d0343a' };\r\n\r\n\t\tconsole.log(height);\r\n\r\n\t\tconst svg = d3.select(this.myRef.current);\r\n\t\tvar simulation = d3.forceSimulation().nodes(bigga);\r\n\t\tsimulation\r\n\t\t\t.force('charge_force', d3.forceManyBody().strength(200))\r\n\t\t\t.force('X', d3.forceX(width / 2))\r\n\t\t\t.force('Y', d3.forceY(height / 2))\r\n\t\t\t.force(\r\n\t\t\t\t'collide',\r\n\t\t\t\td3.forceCollide(function(d) {\r\n\t\t\t\t\treturn d.size + 7;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\r\n\t\tvar zoom_handler = d3.zoom().on('zoom', zoom_actions);\r\n\t\tzoom_handler(svg);\r\n\t\tfunction zoom_actions(event) {\r\n\t\t\tnode.attr('transform', event.transform);\r\n\t\t\ttexts.attr('transform', event.transform);\r\n\t\t}\r\n\r\n\t\tvar node = svg\r\n\t\t\t.append('g')\r\n\t\t\t.attr('class', 'nodes')\r\n\t\t\t.selectAll('circle')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('circle')\r\n\t\t\t.attr('r', (d) => d.size)\r\n\t\t\t.attr('fill', (d) => colordict[d.branch])\r\n\t\t\t.attr('stroke', 'white')\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size + 5);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().attr('r', (d) => d.size);\r\n\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\t\tnode.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\t// var i;\r\n\t\t// for (i = 0; i < bigga.length; i++) {\r\n\t\t// \tif (bigga[i].brach == 'CE') {\r\n\t\t// \t\tnode.data(bigga[i]);\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tvar texts = svg\r\n\t\t\t.append('g')\r\n\t\t\t.selectAll('text')\r\n\t\t\t.data(bigga)\r\n\t\t\t.enter()\r\n\t\t\t.append('text')\r\n\t\t\t.text((d) => d.name)\r\n\t\t\t.style('fill', 'white')\r\n\t\t\t.attr('opacity', function() {\r\n\t\t\t\tif (isMobile(window.navigator).phone || isMobile(window.navigator).tablet) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.on('mouseover', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('10').attr('opacity', '1');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '1');\r\n\t\t\t})\r\n\t\t\t.on('mouseout', function(d, i) {\r\n\t\t\t\td3.select(this).transition().duration('2000').attr('opacity', '0');\r\n\t\t\t\t// div.transition().duration(50).style('opacity', '0');\r\n\t\t\t});\r\n\r\n\t\ttexts.attr('onclick', function(d) {\r\n\t\t\tvar link = \"window.top.location.href='\" + '/' + d._id + \"'\";\r\n\t\t\treturn link;\r\n\t\t});\r\n\t\tnode.append('title').text((d) => d.name).attr('opacity', '1');\r\n\t\tsimulation.on('tick', tickActions);\r\n\t\tfunction tickActions() {\r\n\t\t\ttexts.attr('x', (d) => d.x - d.name.length * 4);\r\n\t\t\ttexts.attr('y', (d) => d.y + 3);\r\n\t\t\tnode\r\n\t\t\t\t.attr('cx', function(d) {\r\n\t\t\t\t\treturn d.x;\r\n\t\t\t\t})\r\n\t\t\t\t.attr('cy', function(d) {\r\n\t\t\t\t\treturn d.y;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar drag_handler = d3.drag().on('start', drag_start).on('drag', drag_drag).on('end', drag_end);\r\n\t\tfunction drag_start(event) {\r\n\t\t\tif (!event.active) simulation.alphaTarget(0.3).restart();\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\t\tfunction drag_drag(event) {\r\n\t\t\tevent.subject.fx = event.x;\r\n\t\t\tevent.subject.fy = event.y;\r\n\t\t}\r\n\r\n\t\tfunction drag_end(event) {\r\n\t\t\tif (d3.active) simulation.alphaTarget(0);\r\n\t\t\tevent.subject.fx = null;\r\n\t\t\tevent.subject.fy = null;\r\n\t\t}\r\n\t\tdrag_handler(node);\r\n\t\tdrag_handler(texts);\r\n\r\n\t\td3.select('#branchwise').on('click', function() {\r\n\t\t\tsimulation\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'X',\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.forceX(function(d) {\r\n\t\t\t\t\t\t\treturn forcedictX[d.branch];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.strength(0.5)\r\n\t\t\t\t)\r\n\t\t\t\t.force(\r\n\t\t\t\t\t'Y',\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.forceY(function(d) {\r\n\t\t\t\t\t\t\treturn forcedictY[d.branch];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.strength(0.5)\r\n\t\t\t\t)\r\n\t\t\t\t.alphaTarget(0.5)\r\n\t\t\t\t.restart();\r\n\t\t});\r\n\t\td3.select('#normal').on('click', function(d) {\r\n\t\t\tsimulation.force('X', d3.forceX(width / 2)).force('Y', d3.forceY(height / 2)).alphaTarget(0.3).restart();\r\n\t\t});\r\n\r\n\t\t// const svg = d3.select('body').append('svg').attr('width', 700).attr('height', 300);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// this.definer();\r\n\r\n\t\tfetch('http://localhost:4000/users?batch=2017&college=IIT PATNA')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((seniors) => this.drawChart(seniors.users));\r\n\r\n\t\t// const data = axios.get('http://localhost:4000/users?batch=2017&college=IIT PATNA');\r\n\t\t// console.log(data);\r\n\t\t// this.drawChart();\r\n\t}\r\n\tsvgHeight = window.innerHeight - 100;\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div class={'patterner'}>\r\n\t\t\t\t<div style={{ background: 'black', 'text-align': 'center' }}>\r\n\t\t\t\t\t<Button id={'branchwise'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tBranchwise\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button id={'normal'} style={{ margin: '8px' }}>\r\n\t\t\t\t\t\tNormal\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<svg\r\n\t\t\t\t\tref={this.myRef}\r\n\t\t\t\t\tstyle={{ width: window.innerWidth, height: this.svgHeight, background: 'black' }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BarChart;\r\n","E:\\my work\\Farewell\\src\\components\\Footer.jsx",["101","102"],"import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<Link className=\"small\" to=\"/about\">\r\n\t\t\t\tmade with love <img height=\"15px\" width=\"15px\" src=\"/photos/info_icon.png\" />\r\n\t\t\t</Link>\r\n\t\t</footer>\r\n\t);\r\n}\r\n","E:\\my work\\Farewell\\src\\screens\\about.jsx",["103"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div align=\"center\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tIt's all been such a terrible waste really! <br />All of us in our Freshman and Sophomore years\r\n\t\t\t\t\tfinanced the previous farewell ceremonies in the hopes that in our junior year, we would get the\r\n\t\t\t\t\tchance to attend a fancy ceremony at a discounted price\r\n\t\t\t\t</h3>\r\n\t\t\t\t<h3>\r\n\t\t\t\t\tBut all that apart <br /> we do really miss you <br /> the parting was abrupt <br /> and <br />we\r\n\t\t\t\t\tnever got the chance to say <br />goodbye\r\n\t\t\t\t</h3>\r\n\t\t\t\t<ul className=\"list\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className=\"creator\" href={'https://www.naths.in'}>\r\n\t\t\t\t\t\t\tnaren\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className=\"creator\" href={'https://github.com/vsaisujeeth'}>\r\n\t\t\t\t\t\t\tVinnakota Sai Sujeeth\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className=\"creator\" href={'https://github.com/ryaswant5'}>\r\n\t\t\t\t\t\t\tYashwanth Rachamallu\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a className=\"creator\" href={'https://github.com/RaghuVamsiVRV'}>\r\n\t\t\t\t\t\t\tRaghu Vamsi\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","E:\\my work\\Farewell\\src\\redux\\ActionTypes.js",[],"E:\\my work\\Farewell\\src\\shared\\comments.js",[],"E:\\my work\\Farewell\\src\\shared\\users.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":12},{"ruleId":"108","severity":1,"message":"112","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":22},{"ruleId":"113","severity":1,"message":"114","line":13,"column":2,"nodeType":"115","messageId":"116","endLine":15,"endColumn":3},{"ruleId":"117","severity":1,"message":"118","line":10,"column":9,"nodeType":"119","messageId":"120","endLine":11,"endColumn":26},{"ruleId":"108","severity":1,"message":"121","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":13},{"ruleId":"108","severity":1,"message":"122","line":7,"column":5,"nodeType":"110","messageId":"111","endLine":7,"endColumn":10},{"ruleId":"108","severity":1,"message":"123","line":12,"column":7,"nodeType":"110","messageId":"111","endLine":12,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":12,"column":56,"nodeType":"126","messageId":"127","endLine":12,"endColumn":58},{"ruleId":"108","severity":1,"message":"128","line":13,"column":7,"nodeType":"110","messageId":"111","endLine":13,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":75,"column":37,"nodeType":"131","endLine":81,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":97,"column":37,"nodeType":"131","endLine":103,"endColumn":44},{"ruleId":"129","severity":1,"message":"130","line":118,"column":37,"nodeType":"131","endLine":124,"endColumn":41},{"ruleId":"129","severity":1,"message":"130","line":139,"column":37,"nodeType":"131","endLine":144,"endColumn":41},{"ruleId":"129","severity":1,"message":"132","line":159,"column":37,"nodeType":"131","endLine":162,"endColumn":40},{"ruleId":"129","severity":1,"message":"132","line":183,"column":33,"nodeType":"131","endLine":184,"endColumn":57},{"ruleId":"133","severity":1,"message":"134","line":225,"column":1,"nodeType":"135","messageId":"136","endLine":244,"endColumn":11},{"ruleId":"129","severity":1,"message":"137","line":91,"column":9,"nodeType":"131","endLine":97,"endColumn":11},{"ruleId":"108","severity":1,"message":"138","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":52,"column":49,"nodeType":"141","messageId":"142","endLine":52,"endColumn":94},{"ruleId":"108","severity":1,"message":"143","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":29},{"ruleId":"108","severity":1,"message":"144","line":3,"column":28,"nodeType":"110","messageId":"111","endLine":3,"endColumn":36},{"ruleId":"108","severity":1,"message":"145","line":3,"column":38,"nodeType":"110","messageId":"111","endLine":3,"endColumn":47},{"ruleId":"108","severity":1,"message":"146","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":14},{"ruleId":"108","severity":1,"message":"147","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":13},{"ruleId":"108","severity":1,"message":"148","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":13},{"ruleId":"149","severity":1,"message":"150","line":85,"column":44,"nodeType":"126","messageId":"151","endLine":85,"endColumn":45},{"ruleId":"149","severity":1,"message":"150","line":119,"column":44,"nodeType":"126","messageId":"151","endLine":119,"endColumn":45},{"ruleId":"152","severity":1,"message":"153","line":4,"column":1,"nodeType":"154","endLine":12,"endColumn":2},{"ruleId":"155","severity":1,"message":"156","line":8,"column":20,"nodeType":"131","endLine":8,"endColumn":82},{"ruleId":"108","severity":1,"message":"146","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'song' is defined but never used.","Identifier","unusedVar","'packSiblings' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'min' is defined but never used.","'store' is assigned a value but never used.","'eqLength' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isNumber' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Errors' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'photo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]